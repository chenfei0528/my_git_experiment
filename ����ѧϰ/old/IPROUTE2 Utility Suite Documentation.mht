From: <ÓÉ Windows Internet Explorer 8 ±£´æ>
Subject: IPROUTE2 Utility Suite Documentation
Date: Mon, 28 Oct 2013 16:26:27 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0000_01CED3FA.73DB7510"
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.6157

This is a multi-part message in MIME format.

------=_NextPart_000_0000_01CED3FA.73DB7510
Content-Type: text/html;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.policyrouting.org/iproute2.doc.html

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>IPROUTE2 Utility Suite Documentation</TITLE>
<META content=3D"text/html; charset=3Dgb2312" http-equiv=3DContent-Type>
<META name=3DAUTHOR content=3D"Matthew G. Marsh">
<META name=3DCREATED content=3D20000403;15430600>
<META name=3DCHANGEDBY content=3D" ">
<META name=3DCHANGED content=3D20000403;15430600>
<STYLE>@page  {size: 8.5in 11in; margin-right: 0.92in; margin-top: 1in; =
margin-bottom: 0.49in; }
P {
	LINE-HEIGHT: 0.17in; WIDOWS: 2; FONT-FAMILY: "Courier", monospace; =
ORPHANS: 2; MARGIN-BOTTOM: 0.08in; FONT-SIZE: 12pt
}
H1 {
	LINE-HEIGHT: 0.17in; WIDOWS: 2; FONT-FAMILY: "helvetica", sans-serif; =
ORPHANS: 2; MARGIN-BOTTOM: 0.08in; FONT-SIZE: 16pt
}
P.hanging-indent {
	PAGE-BREAK-BEFORE: auto; LINE-HEIGHT: 100%; TEXT-INDENT: -0.5in; =
MARGIN-BOTTOM: 0in; MARGIN-LEFT: 1.1in
}
P.reverse-indent {
	PAGE-BREAK-BEFORE: auto; LINE-HEIGHT: 100%; TEXT-INDENT: -0.6in; =
MARGIN-LEFT: 0.6in
}
P.1indent {
	PAGE-BREAK-BEFORE: auto; TEXT-INDENT: -0.7in; MARGIN-BOTTOM: 0.08in; =
MARGIN-LEFT: 0.7in
}
P.2indent {
	TEXT-INDENT: -0.5in; MARGIN-BOTTOM: 0.08in; MARGIN-LEFT: 1.2in
}
P.dblindent {
	MARGIN-BOTTOM: 0.08in; MARGIN-LEFT: 0.7in; MARGIN-RIGHT: 0.7in
}
</STYLE>

<META name=3DGENERATOR content=3D"MSHTML 8.00.6001.23532"></HEAD>
<BODY>
<CENTER>
<H2><A name=3Diproute2.doc.html>IPROUTE2 Utility Suite Howto</A></H2>
<H3><A href=3D"http://www.policyrouting.org/">Main PolicyRouting.Org=20
Website</A>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A=
=20
href=3D"http://www.policyrouting.org/PolicyRoutingBook/">PolicyRouting=20
Book</A></H3><BR></CENTER>
<H3><A href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.0">9.0 =
Obtaining=20
&amp; Compiling IPROUTE2</A></H3>
<H3><A href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.1">9.1 =
IP=20
Command Set</A></H3>
<UL>
  <LI><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.1.1">9.1.1 ip =

  link - network device configuration</A>=20
  <LI><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.1.2">9.1.2 ip =

  link set --- change device attributes.</A> </LI></UL>
<P>
<H3><A href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.2">9.2 =
ip=20
address - protocol address management</A></H3>
<UL>
  <LI><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.2.1">9.2.1 ip =

  address add --- add new protocol address.</A>=20
  <LI><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.2.2">9.2.2 ip =

  address delete --- delete protocol address.</A>=20
  <LI><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.2.3">9.2.3 ip =

  address show --- look at protocol addresses.</A> </LI></UL>
<P>
<H3><A href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.3">9.3 =
IP=20
Interface Primary and Secondary Addressing:</A></H3>
<UL>
  <LI><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.3.1">9.3.1 ip =

  address flush --- flush protocol addresses.</A> </LI></UL>
<P>
<H3><A href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.4">9.4 =
ip=20
neighbour --- neighbour/arp table management.</A></H3>
<UL>
  <LI><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.4.1">9.4.1 ip =

  neighbour add --- add new neighbour entry</A>=20
  <LI><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.4.2">9.4.2 ip =

  neighbour change --- change existing entry</A>=20
  <LI><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.4.3">9.4.3 ip =

  neighbour replace --- add new or change existing entry</A>=20
  <LI><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.4.4">9.4.4 ip =

  neighbour delete --- delete neighbour entry.</A>=20
  <LI><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.4.5">9.4.5 ip =

  neighbour show --- list neighbour entries.</A>=20
  <LI><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.4.6">9.4.6 ip =

  neighbour flush --- flush neighbour entries.</A> </LI></UL>
<P>
<H3><A href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.5">9.5 =
ip route=20
- routing table management.</A></H3>
<UL>
  <LI><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.5.1">9.5.1 ip =

  route add --- add new route</A>=20
  <LI><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.5.2">9.5.2 ip =

  route change --- change route</A>=20
  <LI><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.5.3">9.5.3 ip =

  route replace --- change route or add new one.</A>=20
  <LI><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.5.4">9.5.4 ip =

  route delete</A>=20
  <LI><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.5.5">9.5.5 ip =

  route show</A>=20
  <LI><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.5.6">9.5.6 ip =

  route flush - alows group deletion of routes</A>=20
  <LI><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.5.7">9.5.7 ip =

  route get - obtain route pathing</A> </LI></UL>
<P>
<H3><A href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.6">9.6 =
ip rule=20
--- routing policy database management.</A></H3>
<UL>
  <LI><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.6.1">9.6.1 ip =

  rule add --- insert new rule</A>=20
  <LI><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.6.2">9.6.2 ip =

  rule show - list policy rules</A> </LI></UL>
<P>
<H3><A href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.7">9.7 =
ip tunnel=20
- ip tunnelling configuration</A></H3>
<UL>
  <LI><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.7.1">9.7.1 ip =

  tunnel add - creating tunnels</A>=20
  <LI><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.7.2">9.7.2 ip =

  tunnel show - list tunnel attributes</A> </LI></UL>
<P>
<H3><A href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.8">9.8 =
ip=20
monitor and rtmon --- route state monitoring</A></H3>
<P>
<H3><A href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.9">9.9 =
rtacct -=20
route realms and policy propagation</A></H3>
<P>
<H3><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.10">9.10 IP=20
Utility Summary</A></H3>
<P>
<H3><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.11">9.11 IP=20
Usage in Scripting</A></H3>
<P>
<H3><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.12">9.12 IPUP =

&amp; IPDOWN</A></H3>
<P>
<H3><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.13">9.13=20
IPNetwork Init Script</A></H3>
<P>
<H3><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.14">9.14 =
ifcfg=20
script</A></H3>
<P>
<H3><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.15">9.15 =
arping=20
utility</A></H3>
<P>
<H3><A =
href=3D"http://www.policyrouting.org/iproute2.doc.html#ss9.16">9.16 =
Policy=20
Routing - Multiple Route Tables Example</A></H3>
<P>
<H2 align=3Dcenter>IPROUTE2 Utility Suite Documentation</H2>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>This docvumentation covers =
the ip utility=20
from IPROUTE2. This utility is written by Alexey N. Kuznetsov who also =
wrote the=20
IPv6 and IPv4 routing code for Linux 2.2. This is the utility he uses =
for=20
manipulating the Linux 2.2-2.6 network interface code. =
</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>We will begin by explaining =
where to=20
obtain the utility collection and how to compile it. After it is =
compiled we=20
will cover the utilities created and in what location on the system they =
should=20
reside. This includes all of the utilities in the IPROUTE2=20
suite.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Then we will begin extensive =
coverage of=20
the ip command with documentation of usage and examples. This section =
draws=20
heavily upon Alexey's own documentation of the command with additional=20
discussion and examples. Some of the usages of the command, such as =
multicast=20
and IPv6 specific usage will be deferred at this point but we will be =
extending=20
this document with that coverage as time goes on. While this is often =
what would=20
be found in man pages, no man pages currently exist for the ip command =
and=20
Alexey's own current documentation is only available in Latex format. =
With=20
Alexey's permission we have edited and expanded the Latex documentation =
into the=20
sections found here. If there are errors in these sections they probably =
belong=20
to Matthew's translation and should be addressed to him =
first.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>To tie together what we have =
learned=20
about the ip utility we will list a few working examples of the ip =
utility.=20
These include several longer script examples from Alexey along with some =
daily=20
usage features of the utility. We then in the Table of Contents list a =
set of=20
examples from real life that are collected here.</FONT></FONT></P>
<P style=3D"MARGIN-BOTTOM: 0.17in" align=3Dcenter><FONT size=3D4><B><A=20
name=3Dss9.0>Obtaining &amp; Compiling IPROUTE2</A></B></FONT></P>
<P style=3D"MARGIN-BOTTOM: 0.17in"><SPAN style=3D"TEXT-DECORATION: =
none"><SPAN=20
style=3D"FONT-STYLE: normal"><FONT size=3D3><FONT face=3D"courier, =
monospace">The ip=20
utility is just one of the utilities in the IPROUTE2 utility package =
from=20
Alexey. The primary FTP site was located in Russia at=20
</FONT></FONT></SPAN></SPAN><SPAN style=3D"TEXT-DECORATION: none"><SPAN=20
style=3D"FONT-STYLE: normal"><FONT size=3D3><FONT=20
face=3D"courier, =
monospace">ftp://ftp.inr.ac.ru/ip-routing/</FONT></FONT></SPAN></SPAN>=20
<SPAN style=3D"TEXT-DECORATION: none"><SPAN style=3D"FONT-STYLE: =
normal"><FONT=20
size=3D3><FONT face=3D"courier, monospace">but is no longer running. The =
most=20
complete mirror is located at </FONT></FONT></SPAN></SPAN><A=20
href=3D"http://www.linuxgrill.com/anonymous/iproute2/"><SPAN=20
style=3D"TEXT-DECORATION: none"><SPAN style=3D"FONT-STYLE: normal"><FONT =

size=3D3><FONT=20
face=3D"courier, =
monospace">http://www.linuxgrill.com/anonymous/iproute2/</FONT></FONT></S=
PAN></SPAN></A>=20
<SPAN style=3D"TEXT-DECORATION: none"><SPAN style=3D"FONT-STYLE: =
normal"><FONT=20
size=3D3><FONT face=3D"courier, monospace">with the newest OSDL source =
code located=20
within the </FONT></FONT></SPAN></SPAN><A=20
href=3D"http://www.linuxgrill.com/anonymous/iproute2/NEW-OSDL/"><SPAN=20
style=3D"TEXT-DECORATION: none"><SPAN style=3D"FONT-STYLE: normal"><FONT =

size=3D3><FONT=20
face=3D"courier, =
monospace">http://www.linuxgrill.com/anonymous/iproute2/NEW-OSDL/</FONT><=
/FONT></SPAN></SPAN></A>=20
<SPAN style=3D"TEXT-DECORATION: none"><SPAN style=3D"FONT-STYLE: =
normal"><FONT=20
size=3D3><FONT face=3D"courier, monospace">directory. We will assume =
that you have=20
obtained the latest package usually called iproute2-current symlinked to =
the=20
latest dated version. The version we primarily cover here is the =
1999-06-30=20
version of IPROUTE2.</FONT></FONT></SPAN></SPAN></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Once the utility has been =
obtained you=20
need to unpack it into whatever directory you use for compiling source =
code. The=20
default is to use /usr/src. When you have the package untarred you can =
enter the=20
directory and just type make. You must have the kernel source code that =
was used=20
to compile your current running kernel located in /usr/src/linux. You do =
want to=20
compile a version of your own unless you are using a distribution that =
includes=20
the utility and you have not remade your kernel. Since one of the best =
tuning=20
and security functions you can perform on your system is to obtain and =
compile=20
your own specific kernel you will want to compile this utility also as =
it is the=20
single most important utility in the IP configuration of your=20
system.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>After you have typed make the =
utility=20
suite will compile. Then we have to install the various parts. There is =
no=20
install target in the makefile. All of the utilities in this package =
should be=20
installed into the /sbin directory. This is so that they are available =
even=20
before your /usr directory is mounted. There is additionally a =
/etc/iproute2=20
directory in the package that contains sample definition files. If you =
do not=20
have a /etc/iproute2/ directory on your system then create one and copy =
the=20
contents of the package directory to the new directory. If an =
/etc/iproute2/=20
directory exists and you do not know what it is being used for then you =
will=20
want to find out if the files in that directory have some meaning to the =
system=20
you are running. If not then replacing them with the files in the =
package=20
directory will not hurt.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>In a nutshell we want to =
perform the=20
following steps:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>1. Compile the utilities by =
typing=20
make</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>2. Check /etc/iproute2/ with =
ls -l=20
/etc/iproute2</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>3. If needed create =
/etc/iproute2/ with=20
</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>mkdir =
/etc/iproute2/</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>4. Populate it with cp =
./etc/iproute2/*=20
/etc/iproute2/</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>5. Change into the ip =
directory with cd=20
ip</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>6. cp ifcfg ip routef routel =
rtacct rtmon=20
rtpr /sbin</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>7. Change into tc directory =
with cd=20
../tc</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>8. cp tc =
/sbin</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>This will compile the utility =
and copy=20
the configuration files and the executables into the appropriate =
directories. We=20
should now be able to execute the ip utility from anywhere on the system =
by=20
typing ip. To test and see if this worked type ip addr and you should =
get a list=20
of the interfaces and addresses on your system.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D4><B><A =
name=3Dss9.1>IP=20
Command Set</A></B></FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>In this section we will =
present a=20
comprehensive description of the ip utility from Alexey Kuznetsov's =
IPROUTE2=20
package. We will start by going through most of the ip command in =
extreme=20
detail. We will cover the link, addr, route, rule, neigh, tunnel, and =
monitor=20
parts of the ip command. The multicast sections will be covered in a "to =
be=20
added later" section on IPv6 and multicasting.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>We will first go through all =
of the=20
command syntax of the ip command. This is due to the situation, current =
as of=20
February 2000, that there are no man pages for ip and the documentation =
is only=20
available in Latex format. If you have read the ip-cref.tex document =
that Alexey=20
has written as included in 1999-06-30 distribution of IPROUTE2 then feel =
free to=20
just skim through most of this section. Matthew has extended the =
discussion and=20
examples somewhat but the core is taken from ip-cref.tex. If you have =
any=20
questions or comments about the examples or statements in this section =
please=20
direct them to Matthew. Note also that by the time you read this the ip =
command=20
may have changed for 2.3/2.4. As it changes we will attempt to keep this =

document current.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>IP Global Command=20
Syntax</B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The generic form of the ip =
command=20
is</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip [ OPTIONS ] OBJECT [ =
COMMAND [=20
ARGUMENTS ]]</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>OPTIONS</B>:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>OPTIONS is a multivalued set =
of modifiers=20
that affect the general behaviour and output of the ip utility. All =
options=20
begin with the "-" character and may be used both in long and =
abbreviated form.=20
Currently the following options are available</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>-V, -Version --- print the =
version of the=20
ip utility and exit.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>-s, -stats, -statistics --- =
output more=20
information.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>This option may be repeated =
to increase=20
the verbosity level of the output. As a rule the additional information =
is=20
device or function statistics or values. In many cases the values output =
should=20
be considered in the same sense as output from the /proc/ directory =
where the=20
name of the value is not directly related to the value itself. See later =
when we=20
run this option with different network device drivers.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>-f, -family {inet, inet6, =
link} ---=20
enforce which protocol family to use.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>If this option is not =
present, the=20
protocol family output to use is guessed from the other command line =
arguments.=20
If the rest of command line does not provide sufficient information to =
guess a=20
protocol family, the ip command falls back to a default family of inet =
in the=20
case of network protocols or to any. Link is a special family identifier =
meaning=20
that no networking protocol is involved. There are several shortcuts for =
this=20
option and they are as listed here:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>-4 --- shortcut for -family=20
inet.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>-6 --- shortcut for -family=20
inet6.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>-0 --- shortcut for -family=20
link.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>-o, -oneline --- format the =
output=20
records as single lines by replacing any line feeds with the "\"=20
character.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>This option is to provide a =
convenient=20
method for sending the command output through a pipe. IE: When you want =
to count=20
the number of output records with wc or you want to to grep through the =
output.=20
As of 1999-06-30 the IPROUTE2 utility package includes the trivial =
script rtpr=20
to convert the output back to the original readable =
form.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>-r, -resolve --- use system =
name=20
resolution to output DNS names</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Do not use this option if you =
are=20
reporting bugs with the ip utility or querying for usage advice. ip =
itself never=20
uses DNS to resolve names to addresses. This option exists for the=20
administrators convenience only.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>OBJECT</B>:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>OBJECT is the object type on =
which you=20
wish to operate on or obtain information about. The object types =
understood by=20
the current ip utility are link, address, neighbor, route, rule, =
maddress,=20
mroute, and tunnel.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>link --- physical or logical =
network=20
device.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>address --- protocol (IPv4 or =
IPv6)=20
address on a device.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>neighbour --- ARP or NDISC =
cache=20
entry.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>route --- routing table=20
entry.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>rule --- rule in routing =
policy=20
database.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>maddress --- multicast=20
address.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>mroute --- multicast routing =
cache=20
entry.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>tunnel --- tunnel over=20
IP.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The names of all of the =
objects may be=20
written in full or abbreviated form. IE: address may be abbreviated as =
addr or=20
just a. However if you use these commands within scripts you should make =
it a=20
habit to always use the full specification of the action. Using the =
abbreviation=20
makes it easy to use on the command line but hard to understand the =
logic within=20
scripts. Since you may not be the only person who ever has to deal with =
your=20
scripts then you should strive to make them as complete as=20
possible.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>COMMAND</B>:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>COMMAND specifies the action =
to perform=20
on the object. The set of possible actions depends on the object type. =
Typically=20
it is possible to add, delete, and show (list) the object(s), but some =
objects=20
will not allow all of these operations and many have additional actions =
and=20
commands. Note that the command syntax help which is available for all =
objects=20
prints out the full list of available commands and argument syntax =
conventions.=20
If no command is given a default command is assumed. The default command =
is=20
usually show (list) but if the objects of the class cannot be listed =
then the=20
default is to print out the command syntax help.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>ARGUMENTS</B>:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ARGUMENTS is the list of =
command options=20
specific to the command. The arguments depend on the command and the =
object.=20
There are two types of arguments that can be issued:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>--- flags - which are =
abbreviated with a=20
single keyword</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>--- parameters - consisting =
of a keyword=20
followed by a value</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Each command has a default =
parameter=20
which is used if the arguments are omitted. IE: The dev parameter is the =
default=20
for the ip link command thus ip link list eth0 is equivalent to ip link =
list dev=20
eth0. Within all the command descriptions below we distinguish default=20
parameters with the marker (default).</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>As we mentioned above for the =
names of=20
objects, all keywords may be abbreviated with the first or first few =
unique=20
letters. These shortcuts are convenient when ip is used interactively, =
but they=20
are not recommended for use in scripts and please do not use them when =
reporting=20
bugs or asking for help. Officially allowed abbreviations are listed =
along with=20
the first mention of the command.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Error =
Conditions</B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The ip command most commonly =
fails for=20
the following reasons:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* Wrong command line=20
syntax</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>This is often due to using an =
unknown=20
keyword, a wrongly formatted IP address, wrong keyword argument for the =
command,=20
etc. In this case the ip command exits without performing any actions =
and prints=20
out an error message containing information about the reason for =
failure. In=20
some cases it prints out the command syntax help.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* The arguments did not pass=20
self-consistency verification</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* ip failed to compile a =
kernel request=20
from the arguments due to insufficient user provided=20
information</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* Kernel returned an error to =
a syscall.=20
In this case ip prints the error message as it was output from =
perror(3),=20
prefixed with a comment and the syscall identifier.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* Kernel returned an error to =
a RTNETLINK=20
request. In this case ip prints the error message as it was output from=20
perror(3) prefixed with "RTNETLINK answers".</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Note that all ip command =
operations are=20
atomic. This means that if the ip command fails it does not change =
anything in=20
the system. One harmful exception is the ip link command which may =
change only=20
part of the device parameters given on the command line. We will mention =
this=20
again in the section on ip link usage and reccomend that all ip link =
actions be=20
performed individually. This is actually a preferred use for the ip =
command in=20
general. If you need to perform many repetitions of the command use a =
script=20
loop or a script as then any generated error messages can be associated =
with the=20
appropriate ip command action.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>It is difficult to list all =
possible=20
error messages especially the syntax errors. As a rule their meaning =
should be=20
clear from the context of the command that was issued. For example if we =
issue=20
the command ip link sub eth0 with the obvious misspelling of set then we =
get the=20
error message "Command "sub" is unknown, try "ip link help"" which =
should prompt=20
us to check our command syntax.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>In using the ip command there =
are several=20
facilities that need to be present in order for the command to perform =
its=20
functions. The ip command talks to the kernel through the NETLINK =
interface.=20
This is turned on by the NETLINK options which are enabled in the kernel =

compile. If the ip command does not work or you get an error message =
then you=20
may not have the needed functions defined or your kernel is not the one =
you=20
compiled. The most common mistakes are:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* NETLINK is not configured =
in the=20
kernel. The error message is</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>"Cannot open netlink socket =
Invalid=20
value"</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* RTNETLINK is not configured =
in the=20
kernel.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>In this case one of the =
following=20
messages may be printed depending on the actual command=20
issued:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>"Cannot talk to rtnetlink =
Connection=20
refused"</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>"Cannot send dump request =
Connection=20
refused"</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.1.1>ip=20
link - network device configuration </A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>A link refers a network =
device. The ip=20
link object and the corresponding command set allows viewing and =
manipulating=20
the state of network devices. The commands for the link object are just =
two, set=20
and show.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.1.2>ip=20
link set --- change device attributes.</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Abbreviations</B>: set,=20
s</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT=20
size=3D4><B>Warning</B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.6in; MARGIN-RIGHT: 0.6in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>You can request multiple =
parameter=20
changes with ip link. If you request multiple parameter changes and any =
ONE=20
change fails then ip aborts immediately after the failure thus the =
parameter=20
changes previous to the failure have completed and are not backed out on =
abort.=20
This is the only case where using the ip command can leave your system =
in an=20
unpredictable state. The solution is to avoid changing multiple =
parameters with=20
one ip link set call. Use as many individual ip link set commands as =
necessary=20
to perform the actions you desire.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Arguments</B>:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* dev NAME (default) --- NAME =
specifies=20
the network device to operate on</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* up / down --- change the =
state of the=20
device to UP or to DOWN</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* arp on / arp off --- change =
NOARP flag=20
status on the device</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Note that this operation is =
not allowed=20
if the device is already in the UP state. Since neither the ip utility =
nor the=20
kernel check for this condition, you can get very unpredictable results =
changing=20
the flag while the device is running. It is better to set the device =
down then=20
issue this command.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* multicast on / multicast =
off --- change=20
MULTICAST flag on the device.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* dynamic on / dynamic off =
--- change=20
DYNAMIC flag on the device.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* name NAME --- change name =
of the=20
device.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Note that this operation is =
not=20
recommended if the device is running or has some addresses already =
configured.=20
You can break your systems security and screw up other networking =
daemons and=20
programs by changing the device name while the device is running or has=20
addressing assigned.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* txqueuelen NUMBER / txqlen =
NUMBER ---=20
change transmit queue length of the device</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* mtu NUMBER --- change MTU =
of the=20
device.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* address LLADDRESS --- =
change station=20
address of the interface.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* broadcast LLADDRESS, brd =
LLADDRESS or=20
peer LLADDRESS --- change link layer broadcast address or peer address =
in the=20
case of a POINTOPOINT interface</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Note that for most physical =
network=20
devices (Ethernet, TokenRing, etc) changing the link layer broadcast =
address=20
will break networking. Do not use this argument if you do not understand =
what=20
this operation really does.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* The ip command does not =
allow changing=20
the PROMISC or ALLMULTI flags as these flags are considered obsolete and =
should=20
not be changed administratively.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Examples</B>:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip link set dummy address =
000000000001=20
--- change station address of the interface dummy.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip link set dummy up --- =
start the=20
interface dummy.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B>ip =
link show ---=20
look at device attributes.</B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Abbreviations</B>: show, =
list, lst,=20
sh, ls, l</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Arguments</B>:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* dev NAME (default) --- NAME =
specifies=20
network device to show.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>If this argument is omitted, =
the command=20
lists all the devices.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* up --- display only running =

interfaces.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Output</B>:</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@alisa~:$ ip link ls=20
dummy</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>2: dummy: =
&lt;BROADCAST,NOARP&gt; mtu=20
1500 qdisc noop</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>link/ether 000000000000 brd=20
ffffffffffff</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The number followed by a =
colon is the=20
interface index or ifindex. This number uniquely identifies the =
interface. If=20
you look at the output from cat /proc/net/dev you will see that the =
network=20
devices are listed in the same order as the numbering you see here. =
After the=20
ifindex is the interface name (eth0, sit0 etc.). The interface name is =
also=20
unique at any given moment, however interfaces may disappear from the =
list, such=20
as when the corresponding driver module is unloaded, and another =
interface with=20
the same name will be created later. Additionally with the ip link set =
DEVICE=20
name NEWNAME command the system administrator may change the devices=20
name.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The interface name may also =
have another=20
name or the keyword NONE appended after an "@" sign. This signifies that =
this=20
device is bound to another device in a master/slave device relationship. =
Thus=20
packets sent through this device are encapsulated and forwarded on via =
the=20
master device. If the name is NONE, then the master device is=20
unknown.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>After the interface name we =
see the=20
interface mtu (maximal transfer unit) which determines maximal size of =
data=20
packet which can be sent as a single packet over this=20
interface.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The qdisc (queuing =
discipline) shows=20
which queuing algorithm is used on the interface. In particular the =
keyword=20
noqueue means that this interface does not queue anything and the =
keyword noop=20
indicates that the interface is in blackhole mode in which all of the =
packets=20
sent to it are immediately discarded. </FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The qlen indicates the =
default transmit=20
queue length of the device measured in packets.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Following all of this =
inormation is a=20
section within angle brackets. Within the angle brackets is where the =
interface=20
flags are summarized. The most applicable flags are as follows:=20
</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>UP --- this device is turned =
on, ready to=20
accept packets for transmission onto the network and it may receive =
packets from=20
other nodes on the network.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>LOOPBACK --- the interface =
does not=20
communicate to another hosts. All the packets which are sent through it =
will be=20
returned back to the sender and nothing but bounced back packets can be=20
received.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>BROADCAST --- this device has =
the=20
facility to send packets to all other hosts sharing the same physical =
link.=20
Example: Ethernet</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>POINTOPOINT --- the network =
has only two=20
ends with two nodes attached. All the packets sent to the link will =
reach the=20
peer link and all packets received are origined by the =
peer.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>If neither LOOPBACK nor =
BROADCAST nor=20
POINTOPOINT are set, the interface is assumed to be a NBMA =
(Non-Broadcast=20
Multi-Access) link. NBMA is the most generic type of device and also the =
most=20
complicated type of device because a host attached to a NBMA link cannot =
send=20
information to any other host without additional manually provided =
configuration=20
information.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>MULTICAST --- an advisory =
flag noting the=20
interface is aware of multicasting. Broadcasting is particular case of=20
multicasting where the multicast group contains all of the nodes on the =
link as=20
members. Note that software must NOT interpret the absence of this flag =
as the=20
incapability of the interface to multicast. Any POINTOPOINT and =
BROADCAST link=20
is multicasting by definition because we have direct access to all the =
link=20
neighbours and thus to any particular group of them. The use of high =
bandwidth=20
multicast transfers is not recommended on broadcast-only networks due to =
the=20
high expenses associated with the transmission, but such use is not =
strictly=20
prohibited.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>PROMISC --- the device =
listens and feeds=20
to the kernel all of the traffic on the link. This includes every packet =
on the=20
network that passes our transceiver. Usually this mode exists only on =
broadcast=20
links and is used by bridges and network monitoring =
devices.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ALLMULTI --- the device =
receives all=20
multicast packets wandering on the link. This mode is used by multicast=20
routers.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>NOARP --- this flag is =
different from the=20
other flags. It has no invariant value and its interpretation depends on =
network=20
protocols involved. As a rule it indicates that the device does not need =
any=20
address resolution and that the software or hardware knows how to =
deliver=20
packets without any help from the protocol stacks.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>DYNAMIC --- is an advisory =
flag marking=20
this interface as dynamically created and destroyed.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>SLAVE --- this interface is =
bonded to=20
other interfaces in order to share link capacities.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Other flags do exist and can =
be seen in=20
within the angle brackets but they are either obsolete (NOTRAILERS), not =

implemented (DEBUG), or specific to certain devices (MASTER, AUTOMEDIA =
and=20
PORTSEL). We will not discuss them here. Additionally the values of the =
PROMISC=20
and ALLMULTI flags as shown by the ifconfig utility and by the ip =
utility are=20
different. The ip link list command provides the current true device =
state,=20
whereas ifconfig shows the flag state which was set through ifconfig=20
itself.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The second line of the output =
from the=20
example contains information about the link layer addresses associated =
with the=20
device. The first word (ether, sit) defines the interface hardware type =
which=20
then determines the format and semantics of the addresses and thus =
logically is=20
part of the address itself. The default format of station and broadcast=20
addresses (or peer addresses for pointopoint links) is a sequence of =
hexadecimal=20
bytes separated by colons. However some link types may instead have =
their own=20
natural address formats which are used in the presentation. IE: The =
addresses of=20
IP tunnels are printed as dotted-quad IP addresses. While NBMA links =
have no=20
well-defined broadcast or peer address, this field may contain useful=20
information such as the address of a broadcast relay or the address of =
an ARP=20
server. Multicast addresses are not shown by this command, see ip maddr =
list=20
output.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>When given the option =
-statistics ip will=20
print the interface statistics as additional information in the listing. =
Note=20
that you can give this option multiple times with each repetition =
increasing the=20
verbosity of output.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@alisa~ $ ip -s link ls =

eth0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>3: eth0: =
&lt;BROADCAST,MULTICAST,UP&gt;=20
mtu 1500 qdisc cbq qlen 100</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>link/ether 00a0cc661878 brd=20
ffffffffffff</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>RX bytes packets errors =
dropped overrun=20
mcast</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>2449949362 2786187 0 0 0=20
0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>TX bytes packets errors =
dropped carrier=20
collsns</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>178558497 1783945 332 0 332=20
35172</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The RX and TX lines summarize =
receiver=20
and transmitter statistics. The information output breaks down=20
into:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>bytes --- total number of =
bytes received=20
or transmitted on the interface.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>This number wraps when the =
maximal length=20
of the natural data type on the architecture is exceeded. In order to =
provide=20
correct long term data from this output these statistics should be =
continuously=20
monitored. Continuous monitoring of this data requires a user level =
daemon to=20
sample the output periodically.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>packets --- total number of =
packets=20
received or transmitted on the interface.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>errors --- total number of =
receiver or=20
transmitter errors.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>dropped --- total number of =
packets=20
dropped because of lack of resources.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>overrun --- total number of =
receiver=20
overruns resulting in packet drops. As a rule if the interface is =
overrun you=20
have a serious problem either within the kernel or your machine is too =
slow to=20
handle the speed of this interface.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>mcast --- total number of =
received=20
multicast packets. This option is supported only on certain=20
devices.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>carrier --- total number of =
link media=20
failures such as those due to lost carrier.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>collsns --- total number of =
collision=20
events on Ethernet-like media. This number has different interpretations =
on=20
other link types.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>compressed --- total number =
of compressed=20
packets. It is available only for links using VJ header=20
compression.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>When you issue the =
-statistics option=20
more than once you get additional output depending on the statistics =
supported=20
by the device itself as in the following example with=20
Ethernet:</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@alisa~ $ ip -s -s link =
ls=20
eth0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>3: eth0: =
&lt;BROADCAST,MULTICAST,UP&gt;=20
mtu 1500 qdisc cbq qlen 100</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>link/ether 00a0cc661878 brd=20
ffffffffffff</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>RX bytes packets errors =
dropped overrun=20
mcast</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>2449949362 2786187 0 0 0=20
0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>RX errors length crc frame =
fifo=20
missed</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>0 0 0 0 0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>TX bytes packets errors =
dropped carrier=20
collsns</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>178558497 1783945 332 0 332=20
35172</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>TX errors aborted fifo window =

heartbeat</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>0 0 0 332</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>In this case the error names =
are pure=20
Ethernetisms. Other devices may have non-zero fields in these positions =
but the=20
headers are generated independantly of the device responses. It is up to =
the=20
device driver to send more appropriate error messages to the system =
logging=20
facility such as is done by the TokenRing driver.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.2>ip=20
address - protocol address management</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Abbreviations</B>: =
address, addr,=20
a</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Arguments</B>: add, =
delete, flush,=20
show (list)</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The address refers to a =
protocol (IP or=20
IPv6) address attached to a network device. Each device must have at =
least one=20
address in order to use the corresponding protocol. It is possible to =
have=20
several different addresses attached to one device. These addresses are =
not=20
discriminated within the protocol structure so that the term alias is =
not quite=20
appropriate for such multiple addresses and we will not refer to this =
situation=20
in those terms.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The ip addr command allows =
you to look at=20
the addresses and their properties on an interface. You can add new =
addresses=20
and delete old ones without regard to any ordering. Later on we will =
discuss the=20
concept of primary and secondary addresses as applied to=20
Linux.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.2.1>ip=20
address add --- add new protocol address.</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Abbreviations</B>: add,=20
a</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Arguments</B>:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>dev NAME --- name of the =
device to which=20
we add the address</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>local ADDRESS (default) --- =
address of=20
the interface.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The format of the address =
depends on the=20
protocol. IPv4 uses dotted quad and IPv6 uses a sequence of hexadecimal=20
halfwords separated by colons. The ADDRESS may be followed by a slash =
and a=20
decimal number, which encodes network prefix (netmask) length in CIDR =
notation.=20
If no CIDR netmask notation is specified then the command assumes a host =
(/32=20
mask) address is specified.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>peer ADDRESS--- address of =
remote=20
endpoint for pointopoint interfaces. Again, the ADDRESS may be followed =
by a=20
slash and decimal number, encoding the network prefix length. If a peer =
address=20
is specified then the local address cannot have a network prefix length =
as the=20
network prefix is associated with the peer rather than with the local =
address.=20
In other words, netmasks can only be assigned to peer addresses when =
specifying=20
both peer and local addresses.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>broadcast ADDRESS --- =
broadcast address=20
on the interface.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The special symbols "+" and =
"-" can be=20
used instead of specifying the broadcast address. In this case the =
broadcast=20
address is derived by either setting all of the interface host bits to =
one (+)=20
or by setting all of the interface host bits to zero (-). In most modern =

implementations of IPv4 networking you will want to use the (+) setting. =
See the=20
ipup init script in Chapter 15. Unlike ifconfig, the ip command does not =
set a=20
broadcast address unless explicitly requested.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>label NAME --- Each address =
may be tagged=20
with a label string.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>In order to preserve =
compatibility with=20
Linux-2.0 net aliases, this string must coincide with the name of the =
device or=20
must be prefixed with device name followed by a colon.=20
(eth0:duh)</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>scope SCOPE_VALUE --- scope =
of the area=20
within which this address is valid.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The available scopes are =
listed in the=20
file</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>/etc/iproute2/rt_scopes. The =
predefined=20
scope values are:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>global --- the address is =
globally=20
valid.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>site --- (IPv6 only) address =
is site=20
local, valid only inside this site.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>link --- the address is link =
local, valid=20
only on this device.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>host --- the address is valid =
only inside=20
this host.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Examples</B>:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip addr add 127.0.0.1/8 dev =
lo brd +=20
scope host</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>--- adds the usual loopback =
address to=20
loopback device. The device must be enabled before this address will =
show=20
up.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip addr add 10.0.0.1/24 brd + =
dev=20
eth0</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>--- adds address 10.0.0.1 =
with prefix=20
length 24 (netmask 255.255.255.0) and standard broadcast to interface=20
eth0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.2.2>ip=20
address delete --- delete protocol address.</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Abbreviations</B>: delete, =
del,=20
d</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Arguments</B>:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The arguments coincide with =
arguments of=20
ip addr add. The device name is a required argument, the rest are =
optional. If=20
no arguments are given, the first address listed is =
deleted.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Examples:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip addr del 127.0.0.1/8 dev=20
lo</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>--- deletes the loopback =
address from=20
loopback device.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Alexey =
states:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>"It would be better not to =
try to repeat=20
this experiment 8-}"</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Delete all IPv4 addresses on =
interface=20
eth0:</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>while ip -f inet addr del dev =
eth0;=20
do</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>nothing</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>done</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Another method to disable IP =
on an=20
interface using ip addr flush is discussed later.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.2.3>ip=20
address show --- look at protocol addresses.</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Abbreviations</B>: show, =
list, lst,=20
sh, ls, l</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Arguments</B>:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>dev NAME (default) --- name =
of the=20
device.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>scope SCOPE_VAL --- list only =
addresses=20
with this scope.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>to PREFIX --- list only =
addresses=20
matching this prefix.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>label PATTERN --- list only =
addresses=20
with labels matching the PATTERN.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>PATTERN is the usual shell =
regexp style=20
pattern.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>dynamic / permanent --- (IPv6 =
only) list=20
only addresses installed due to stateless address configuration or list =
only the=20
permanent (not dynamic) addresses.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>tentative --- (IPv6 only) =
list only=20
addresses, which did not pass duplicate address =
detection.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>deprecated --- (IPv6 only) =
list only=20
deprecated addresses.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>primary / secondary --- list =
only primary=20
(or secondary) addresses.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Example</B>:</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@alisa~ $ ip addr ls=20
eth0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>3: eth0: =
&lt;BROADCAST,MULTICAST,UP&gt;=20
mtu 1500 qdisc cbq qlen 100</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>link/ether 00a0cc661878 brd=20
ffffffffffff</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>inet 193.233.7.90/24 brd =
193.233.7.255=20
scope global eth0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>inet6 =
3ffe2400012a0ccfffe661878/64 scope=20
global dynamic</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>valid_lft forever =
preferred_lft=20
604746sec</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>inet6 fe802a0ccfffe661878/10 =
scope=20
link</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The first two lines coincide =
with the=20
output of ip link list as it is only natural to interpret link layer =
addresses=20
as being addresses of the protocol family AF_PACKET. The list of IPv4 =
and IPv6=20
addresses follows accompanied by additional attributes such as scope =
value,=20
flags, and address label. Address flags are set by the kernel and cannot =
be=20
changed administratively. Currently the following flags are=20
defined:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>secondary --- this address is =
not used=20
when selecting the default source address for outgoing packets. An IP =
address=20
becomes secondary if another address within the same prefix (network) =
already=20
exists. The first address within the prefix is primary and is the tag =
address=20
for the group of all the secondary addresses. When the primary address =
is=20
deleted all of the secondaries are purged too. See the examples for the =
actual=20
functionality of these steps.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>dynamic --- the address was =
created due=20
to stateless autoconfiguration. In this case the output also contains=20
information on the times for which the address remains valid. After the=20
preferred lifetime (preferred_lft) expires the address is moved to the=20
deprecated state and after the valid lifetime (valid_lft) expires the =
address is=20
finally invalidated.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>deprecated --- the address is =
deprecated.=20
It is still valid but cannot be used by newly created connections. See =
dynamic=20
above.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: 0in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>tentative --- the address is =
not used=20
because duplicate address detection is still not complete or has=20
failed.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.3>IP=20
Interface Primary and Secondary Addressing:</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>To explain the actual =
relationship=20
between primary and secondary addresses we will run the following=20
experiment.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip addr add 10.1.1.1/24 dev=20
dummy</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip addr add 10.1.1.2/24 dev=20
dummy</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Now look at the =
output:</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip addr list =
dummy</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>3: dummy:=20
&lt;BROADCAST,MULTICAST,NOARP&gt; mtu 1500 qdisc noop</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>link/ether 00:00:00:00:00:00 =
brd=20
ff:ff:ff:ff:ff:ff</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>inet 10.1.1.1/24 scope global =

dummy</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>inet 10.1.1.2/24 scope global =
secondary=20
dummy</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Now add in some addresses =
still in that=20
network but add them as host addresses:</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip addr add 10.1.1.3/32 dev=20
dummy</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip addr add 10.1.1.4/25 dev=20
dummy</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>And run our list=20
command:</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip addr list =
dummy</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>3: dummy:=20
&lt;BROADCAST,MULTICAST,NOARP&gt; mtu 1500 qdisc noop</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>link/ether 00:00:00:00:00:00 =
brd=20
ff:ff:ff:ff:ff:ff</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>inet 10.1.1.1/24 scope global =

dummy</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>inet 10.1.1.3/32 scope global =

dummy</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>inet 10.1.1.4/25 scope global =

dummy</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>inet 10.1.1.2/24 scope global =
secondary=20
dummy</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>And finally delete the =
primary=20
address</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip addr del 10.1.1.1/24 dev=20
dummy</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Run the list =
command:</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip addr list =
dummmy</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>3: dummy:=20
&lt;BROADCAST,MULTICAST,NOARP&gt; mtu 1500 qdisc noop</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>link/ether 00:00:00:00:00:00 =
brd=20
ff:ff:ff:ff:ff:ff</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>inet 10.1.1.3/32 scope global =

dummy</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>inet 10.1.1.4/25 scope global =

dummy</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Note that the most important =
part of what=20
we said above about secondary and primary addresses is the prefix =
(netmask)=20
length. Even though technically you can consider the address 10.1.1.3 to =
belong=20
within the network prefix 10.1.1.0/24, the actual prefix associated with =
the=20
address is /32 so this address is treated independantly of the initial =
primary=20
address. If you are still uncertain about why sit down and calculate out =
the=20
networks and masks of the example above.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>What we are showing here is =
that unlike=20
the behaviour in the 2.0 series kernels under the horrid eth0:xx style =
aliasing=20
is that multiple addresses on an interface are not neccesarily related. =
So if=20
you want to (and we will show an example in the howto section) you can =
enter in=20
all of your ip addresses without network masks and treat them completely =

independantly.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.3.1>ip=20
address flush --- flush protocol addresses.</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Abbreviations</B>: flush,=20
f</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Arguments</B>:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>This commands flushes =
protocol addresses=20
selected by some criteria. This command has the same arguments as show. =
The=20
major difference is that this command will not run if no arguments are =
given.=20
Otherwise you could delete all of your addresses by mistake. This =
command (and=20
the other flush commands described below) are very dangerous. If you =
make a=20
mistake the command does not ask or forgive but really will creully =
purge all of=20
your addresses. Be warned!</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>With the option -statistics =
the command=20
becomes verbose and prints out the number of deleted addresses and =
number of=20
processing rounds made in order to flush the address list. If the =
-statistics=20
option is given twice then ip addr flush also dumps all of the deleted =
addresses=20
in the full format as described in the ip addr list =
section.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Examples</B>:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Delete all the addresses from =
private=20
network 10.0.0.0/8:</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>netadm@amber~ # ip -stat =
-stat addr flush=20
to 10/8</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>2 dummy inet 10.7.7.7/16 brd =
10.7.255.255=20
scope global dummy</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>3 eth0 inet 10.10.7.7/16 brd=20
10.10.255.255 scope global eth0</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>4 eth1 inet 10.8.7.7/16 brd =
10.8.255.255=20
scope global eth1</FONT></FONT></P>
<P style=3D"MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in"><B><SPAN=20
style=3D"TEXT-DECORATION: none"><SPAN style=3D"FONT-STYLE: normal"><FONT =

size=3D3><FONT face=3D"courier, monospace">***Round 1, deleting 3=20
addresses***</FONT></FONT></SPAN></SPAN></B></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***Flush is complete after 1=20
round***</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><BR><BR></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Another instructive example =
is deleting=20
all IPv4 addresses from all Ethernet interfaces in the =
system:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>netadm@amber~ # ip -4 addr =
flush label=20
"eth*"</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>And the last example shows =
how to flush=20
all the IPv6 addresses acquired by the host from stateless address=20
autoconfiguration after enabling forwarding or disabling=20
autoconfiguration.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>netadm@amber~ # ip -6 addr =
flush=20
dynamic</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.4>ip=20
neighbour --- neighbour/arp table management.</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Abbreviations</B>: =
neighbour,=20
neighbor, neigh, n</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The neighbour table objects =
establish=20
bindings between protocol addresses and link layer addresses for hosts =
sharing=20
the same physical link. Neighbour object entries are organized into =
tables. The=20
IPv4 neighbour object table is known under another name as the ARP =
table. These=20
commands allow you to look at the neighbour table bindings and their =
properties,=20
to add new neighbour table entries, and to delete old =
ones.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Arguments</B>:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>add, change, replace, delete, =
flush and=20
show (list)</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.4.1>ip=20
neighbour add --- add new neighbour entry</A></B></FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.4.2>ip=20
neighbour change --- change existing entry</A></B></FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.4.3>ip=20
neighbour replace --- add new or change existing =
entry</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>add, a; change, chg; replace, =

repl</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>These commands create new =
neighbour=20
records or update existing ones.</FONT></FONT></P>
<P>to ADDRESS (default) --- protocol address of the neighbour. It is =
either an=20
IPv4 or IPv6 address.</P>
<P>dev NAME --- the interface to which this neighbour is attached</P>
<P>lladdr LLADDRESS --- link layer address of the neighbour. LLADDRESS =
can be=20
null.</P>
<P>nud NUD_STATE --- state of the neighbour entry. nud is an =
abbreviation for=20
"Neighbour Unreachability Detection". This state can take one of the =
following=20
values:</P>
<P><BR><BR></P>
<P>permanent --- the neighbour entry is valid forever and can be removed =
only=20
administratively.</P>
<P>noarp --- the neighbour entry is valid, no attempts to validate this =
entry=20
will be made but it can be removed when its lifetime expires.</P>
<P>reachable --- the neighbour entry is valid until reachability timeout =

expires.</P>
<P>stale --- the neighbour entry is valid, but suspicious. This option =
to ip=20
neighbour does not change the neighbour state if the entry was valid and =
the=20
address has not been changed by this command.</P>
<P><B>Examples</B>:</P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip neigh add 10.0.0.3 lladdr =
000001 dev=20
eth0 nud perm</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>--- add permanent ARP entry =
for neighbour=20
10.0.0.3 on the device eth0.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip neigh chg 10.0.0.3 dev =
eth0 nud=20
reachable</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>--- change its state to=20
reachable.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.4.4>ip=20
neighbour delete --- delete neighbour entry.</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Abbreviations</B>: delete, =
del,=20
d.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>This command invalidates a =
neighbour=20
entry.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The arguments are the same as =
with ip=20
neigh add, only lladdr and nud are ignored.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Example</B>:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip neigh del 10.0.0.3 dev=20
eth0</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>--- invalidate ARP entry for =
neighbour=20
10.0.0.3 on the device eth0.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Deleted neighbour entry will =
not=20
disappear from the tables immediately; if it is in use it cannot be =
deleted=20
until the last client will release it, otherwise it will be destroyed =
during the=20
next garbage collection.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT=20
size=3D4><B>WARNING!</B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Attempts to delete or to =
change manually=20
a noarp entry created by kernel may result in unpredictable behaviour. =
More=20
specifically the kernel may start trying to resolve this address even on =
NOARP=20
interfaces or change the address to multicast or =
broadcast.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.4.5>ip=20
neighbour show --- list neighbour entries.</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Abbreviations</B>: show, =
list, sh,=20
ls.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>This commands displays =
neighbour=20
tables.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Arguments</B>:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>to ADDRESS (default) --- =
prefix selecting=20
neighbours to list.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>dev NAME --- list only =
neighbours=20
attached to this device.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>unused --- list only =
neighbours, which=20
are not in use now.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>nud NUD_STATE --- list only =
neighbour=20
entries in this state. NUD_STATE takes values listed below after the =
example or=20
the special value all, which means all the states. This option may occur =
more=20
than once. If this option is absent, ip lists all the entries except for =
none=20
and noarp.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Example</B>:</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@alisa~ $ ip neigh=20
ls</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>dev lo lladdr 000000000000 =
nud=20
noarp</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fe80200cfffe763f85 dev eth0 =
lladdr=20
00000c763f85 router nud stale</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>0.0.0.0 dev lo lladdr =
000000000000 nud=20
noarp</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>193.233.7.254 dev eth0 lladdr =

00000c763f85 nud reachable</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>193.233.7.85 dev eth0 lladdr =
00e01e633900=20
nud stale</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@alisa~ =
$</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The first word of each line =
is the=20
protocol address of the neighbour followed by the device name. The rest =
of the=20
line describes the contents of neighbour entry identified by the pair =
(device,=20
address).</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>lladdr is link layer address =
of the=20
neighbour.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>nud is the state of =
``neighbour=20
unreachability detection for this entry. The full list of the possible =
nud=20
states with minimal descriptions are:</FONT></FONT></P>
<P>none --- state of the neighbour is void.</P>
<P>incomplete --- the neighbour is in process of resolution.</P>
<P>reachable --- the neighbour is valid and apparently reachable.</P>
<P>stale --- the neighbour is valid, but probably it is already =
unreachable, so=20
that kernel will try to check it at the first transmission.</P>
<P>delay --- a packet has been sent to the stale neighbour, kernel waits =
for=20
confirmation.</P>
<P>probe --- delay timer expired, but no confirmation was received. =
Kernel has=20
started to probe neighbour with ARP/NDISC messages.</P>
<P>failed --- resolution has failed.</P>
<P>noarp --- the neighbour is valid, no attempts to check the entry will =
be=20
made.</P>
<P>permanent --- it is noarp entry, but only administrator may remove =
the entry=20
from neighbour table.</P>
<P>Link layer address is valid in all the states except for none, failed =
and=20
incomplete.</P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>IPv6 neighbours can be marked =
with the=20
additional flag router, which means that that neighbour introduced =
itself as an=20
IPv6 router.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Option -statistics provides =
some usage=20
statistics,</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@alisa~ $ ip -s n ls=20
193.233.7.254</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>193.233.7.254 dev eth0 lladdr =

00000c763f85 ref 5 used 12/13/20 \</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>nud =
reachable</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@alisa~ =
$</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Here ref is number of users =
of this=20
entry, and used is a triplet of time intervals in seconds separated by =
slashes.=20
The triplet of numbers is coded as {used/confirmed/updated}. In this =
example=20
they show that</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The entry was used 12 seconds =

ago.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The entry was confirmed 13 =
seconds=20
ago.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The entry was updated 20 =
seconds=20
ago.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.4.6>ip=20
neighbour flush --- flush neighbour entries.</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Abbreviations</B>: flush,=20
f.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>This commands flushes the =
neighbour=20
tables. Entries may be selected to flush by various =
criteria.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>This command has the same =
arguments as=20
show. Note that it will not run when no arguments are given, and that =
the=20
default neighbour states to be flushed do not include permanent or=20
noarp.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>With the option -statistics =
the command=20
becomes verbose and prints out the number of deleted neighbours and =
number of=20
rounds made in flushing the neighbour table. If the option is given =
twice, ip=20
neigh flush also dumps all the deleted neighbours in the format =
described in the=20
previous subsection.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>netadm@alisa~ # ip -s -s n f=20
193.233.7.254</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>193.233.7.254 dev eth0 lladdr =

00000c763f85 ref 5 used 12/13/20 \</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>nud =
reachable</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***Round 1, deleting 1=20
entries***</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***Flush is complete after 1=20
round***</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><BR><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.5>ip=20
route - routing table management.</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Abbreviations</B>: route, =
ro,=20
r.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>This command manages the =
route entries=20
within the kernel routing tables. The kernel routing tables keep =
information=20
about protocol paths to other networked nodes.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Each route entry has a key =
consisting of=20
the protocol prefix, which is the pairing of the network address and =
network=20
mask length, and optionally the Type of Service (TOS) value. An IP =
packet=20
matches to the route if the highest bits of the packets destination =
address are=20
equal to the route prefix at least up to the prefix length and if the =
TOS of the=20
route is zero or equal to TOS of the packet.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>If several routes match to =
the packet,=20
the following pruning rules are used to select the best =
one:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>1. The longest matching =
prefix is=20
selected, all shorter ones are dropped.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>2. If the TOS of some route =
with the=20
longest prefix is equal to TOS of the packet then routes with different =
TOS are=20
dropped.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>3. If no exact TOS match was =
found and=20
routes with TOS=3D0 exist, the rest of the routes are pruned. Otherwise =
the route=20
lookup fails.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>4. If several routes remain =
after steps=20
1-4 have been tried then routes with the best preference value are=20
selected.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>5. If we still have several =
routes then=20
the first of them is selected.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Note the ambiguity of action =
5.=20
Unfortunately, Linux historically allowed such a bizarre situation. The =
sense of=20
the word "the first" depends on the literal order in which the routes =
were added=20
to the routing table and it is practically impossible to maintain a =
bundle of=20
such routes in any such order.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>For simplicity we will limit =
ourselves to=20
the case wherein such a situation is impossible and routes are uniquely=20
identified by the triplet of {prefix, tos, preference}. Using the ip =
command for=20
route creation and manipulation makes it impossible to create such =
non-unique=20
routes.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>One useful exception to this =
rule is the=20
default route on non-forwarding hosts. It is "officially" allowed to =
have=20
several fallback routes in cases when several routers are present on =
directly=20
connected networks. In this case Linux performs "dead gateway detection" =
as=20
controlled by neighbour unreachability detection and references from the =

transport protocols to select the working router thus the ordering of =
the routes=20
is not essential. However in this specific case it is not recommended =
that you=20
manually fiddle with default routes but instead use the Router Discovery =

protocol. Actually Linux IPv6 does not even allow user level =
applications access=20
to default routes.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Of course the route selection =
steps above=20
are not performed in exactly this sequence. The routing table in the =
kernel is=20
kept in a data structure which allows achieving the final result with =
minimal=20
cost. Without depending on any particular routing algorithm implemented =
in the=20
kernel we can summarize the sequence above as: Route is identified by =
triplet=20
{prefix,tos,preference} key which uniquely locates the route in the =
routing=20
table.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Route attributes</B>: Each =
route key=20
refers to a routing information record. The routing information record =
contains=20
the data required to deliver IP packets, such as output device and next =
hop=20
router, and additional optional attributes, such as path MTU or the =
preferred=20
source address for communicating to that destination.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Route types</B>: It is =
important that=20
the set of required and optional attributes depends on the route type. =
The most=20
important route type is a unicast route which describes real paths to =
another=20
hosts. As a general rule, common routing tables only contain unicast =
routes.=20
However other route types with different semantics do exist. The full =
list of=20
types understood by the Linux 2.2 kernel is:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>unicast --- the route entry =
describes=20
real paths to the destinations covered by route =
prefix.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>unreachable --- these =
destinations are=20
unreachable; packets are discarded and the ICMP message host unreachable =
(ICMP=20
Type 3 Code 1) is generated. The local senders get error=20
EHOSTUNREACH.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>blackhole --- these =
destinations are=20
unreachable; packets are silently discarded. The local senders get error =

EINVAL.</FONT></FONT></P>
<P class=3Dreverse-indent>prohibit --- these destinations are =
unreachable; packets=20
are discarded and the ICMP message communication administratively =
prohibited=20
(ICMP Type 3 Code 13) is generated. The local senders get error =
EACCES.</P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>local --- the destinations =
are assigned=20
to this host, the packets are looped back and delivered=20
locally.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>broadcast --- the =
destinations are=20
broadcast addresses, the packets are sent as link =
broadcasts.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>throw --- special control =
route used=20
together with policy rules. If a throw route is selected then lookup in =
this=20
particular table is terminated pretending that no route was found. =
Without any=20
policy routing it is equivalent to the absence of the route in the =
routing=20
table, the packets are dropped and ICMP message net unreachable (ICMP =
Type 3=20
Code 0) is generated. The local senders get error =
ENETUNREACH.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>nat --- special NAT route. =
Destinations=20
covered by the prefix are considered as dummy (or external) addresses, =
which=20
require translation to real (or internal) ones before forwarding. The =
addresses=20
to translate to are selected with the attribute via.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>anycast --- (not implemented) =
the=20
destinations are anycast addresses assigned to this host. They are =
mainly=20
equivalent to local addresses with the difference that such addresses =
are=20
invalid to be used as the source address of any =
packet.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>multicast --- special type, =
used for=20
multicast routing. It does not present in normal routing=20
tables.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Route tables</B>: Linux =
can place=20
routes within multiple routing tables identified by a number in the =
range from 1=20
to 255 or by a name taken from the file /etc/iproute2/rt_tables. By =
default all=20
normal routes are inserted to the table main (ID 254) and the kernel =
uses only=20
this table when calculating routes.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Actually another routing =
table always=20
exists which is invisible but even more important. It is the local table =
(ID=20
255). This table consists of routes for local and broadcast addresses. =
The=20
kernel maintains this table automatically and administrators should not =
modify=20
it and do not even need to look at it in normal =
operation.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The multiple routing tables =
come into=20
play when policy routing is used. In policy routing the routing table =
identifier=20
becomes effectively one more parameter added to the key triplet=20
{prefix,tos,preference}. Thus under policy routing the route is obtained =
by=20
{tableid,key triplet} identifing the route uniquely. So you can have =
several=20
identical routes in different tables that will not conflict as we had =
mentioned=20
above in in the description of "the first" mechanism.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.5.1>ip=20
route add --- add new route</A></B></FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.5.2>ip=20
route change --- change route</A></B></FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.5.3>ip=20
route replace --- change route or add new one.</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Abbreviations</B>: add, a; =
change,=20
chg; replace, repl.</FONT></FONT></P>
<P class=3Dfirst-line-indent><SPAN style=3D"TEXT-DECORATION: none"><SPAN =

style=3D"FONT-STYLE: normal"><FONT size=3D3><FONT=20
face=3D"courier, =
monospace"><B>Arguments</B>:</FONT></FONT></SPAN></SPAN></P>
<P class=3Dreverse-indent>to PREFIX or to TYPE PREFIX (default) --- =
destination=20
prefix of the route. If TYPE is omitted, ip assumes type unicast. =
Another values=20
of TYPE are listed above. PREFIX is IPv4 or IPv6 address optionally =
followed by=20
slash and prefix length. If the length of the prefix is missing, ip =
assumes=20
full-length host route. Also there is one special PREFIX --- default --- =
which=20
is equivalent to IP 0/0 or to IPv6 /0.</P>
<P class=3Dreverse-indent>tos TOS or dsfield TOS --- Type Of Service =
(TOS) key.=20
This key has no mask associated and the longest match is understood as =
first,=20
compare TOS of the route and of the packet, if they are not equal, then =
the=20
packet still may match to a route with zero TOS. TOS is either 8bit =
hexadecimal=20
number or an identifier from /etc/iproute2/rt_dsfield.</P>
<P class=3Dreverse-indent>metric NUMBER or preference NUMBER --- =
preference value=20
of the route. NUMBER is an arbitrary 32bit number.</P>
<P class=3Dreverse-indent>table TABLEID --- table to add this route. =
TABLEID may=20
be a number or a string from the file /etc/iproute2/rt_tables. If this =
parameter=20
is omitted, ip assumes table main, with exception of local, broadcast =
and nat=20
routes, which are put to table local by default.</P>
<P class=3Dreverse-indent>dev NAME --- the output device name.</P>
<P class=3Dreverse-indent>via ADDRESS --- the address of nexthop router. =
Actually,=20
the sense of this field depends on route type. For normal unicast routes =
it is=20
either true nexthop router or, if it is a direct route installed in BSD=20
compatibility mode, it can be a local address of the interface. For NAT =
routes=20
it is the first address of block of translated IP destinations.</P>
<P class=3Dreverse-indent>src ADDRESS --- the source address to prefer =
using when=20
sending to the destinations covered by route prefix. This address must =
be=20
defined on a local machine interface. This will come into play when =
routes and=20
rules are combined with the masquerade rules of the ipchains firewall we =
discuss=20
later.</P>
<P class=3Dreverse-indent>realm REALMID --- the realm which this route =
is assigned=20
to. REALMID may be a number or a string from the file=20
/etc/iproute2/rt_realms.</P>
<P class=3Dreverse-indent>mtu MTU or mtu lock MTU --- the MTU along the =
path to=20
destination. If modifier lock is not used, MTU may be updated by the =
kernel due=20
to Path MTU Discovery. If the modifier lock is used then no path MTU =
discovery=20
will be performed and all the packets will be sent without the DF bit =
set for=20
the IPv4 case or fragmented to the MTU for the IPv6 case.</P>
<P class=3Dreverse-indent>window NUMBER --- the maximal advertised =
window for TCP=20
to these destinations measured in bytes. This parameter limits the =
maximal data=20
bursts our TCP peers are allowed to send to us.</P>
<P class=3Dreverse-indent>rtt NUMBER --- the initial RTT (``Round Trip =
Time)=20
estimate. <SPAN style=3D"TEXT-DECORATION: none"><SPAN=20
style=3D"FONT-STYLE: normal"><FONT size=3D3><FONT=20
face=3D"courier, monospace">Actually, in Linux 2.2 and 2.0 it is not RTT =
but the=20
initial TCP retransmission timeout. The kernel forgets it as soon as it =
receives=20
the first valid ACK from peer. Alas, this means that this attribute =
affects only=20
the connection retry rate and is hence =
useless.</FONT></FONT></SPAN></SPAN></P>
<P class=3Dreverse-indent>nexthop NEXTHOP --- nexthop of multipath =
route. NEXTHOP=20
is a complex value with its own syntax as follows:</P>
<P class=3Dhanging-indent>via ADDRESS is nexthop router.</P>
<P class=3Dhanging-indent><BR></P>
<P class=3Dhanging-indent>dev NAME is output device.</P>
<P class=3Dhanging-indent><BR></P>
<P class=3Dhanging-indent>weight NUMBER is weight of this element of =
multipath=20
route</P>
<P class=3Dhanging-indent>reflecting its relative bandwidth or =
quality.</P>
<P class=3Dhanging-indent><BR></P>
<P class=3Dreverse-indent>scope SCOPE_VAL --- scope of the destinations =
covered by=20
the route prefix. SCOPE_VAL may be a number or a string from the file=20
/etc/iproute2/rt_scopes. If this parameter is omitted, ip assumes scope =
global=20
for all gatewayed unicast routes, scope link for direct unicast routes =
and=20
broadcasts and scope host for local routes.</P>
<P class=3Dreverse-indent>protocol RTPROTO --- routing protocol =
identifier of this=20
route. RTPROTO may be a number or a string from the file=20
/etc/iproute2/rt_protos. If the routing protocol ID is not given ip =
assumes the=20
protocol is boot. IE. This route has been added by someone who does not=20
understand what they are doing. Several of these protocol values have a =
fixed=20
interpretation.</P>
<P style=3D"PAGE-BREAK-BEFORE: auto" class=3Dhanging-indent>redirect --- =
route was=20
installed due to ICMP redirect.</P>
<P class=3Dhanging-indent><BR></P>
<P class=3Dhanging-indent>kernel --- route was installed by the kernel =
during=20
autoconfiguration.</P>
<P class=3Dhanging-indent><BR></P>
<P class=3Dhanging-indent>boot --- route was installed during bootup =
sequence. If=20
a routing daemon will start, it will purge all of them. This is the =
value=20
assigned to manually inserted routes that do not have a protocol =
specified.</P>
<P class=3Dhanging-indent><BR></P>
<P class=3Dhanging-indent>static --- route was installed by =
administrator to=20
override dynamic routing. Routing daemon(s) will respect them and =
advertise them=20
if it is so configured.</P>
<P class=3Dhanging-indent><BR></P>
<P class=3Dhanging-indent>ra --- route was installed by Router Discovery =

protocol.</P>
<P style=3D"TEXT-INDENT: 0in; MARGIN-LEFT: 0.7in" =
class=3Dhanging-indent><BR></P>
<P style=3D"TEXT-INDENT: 0in; MARGIN-LEFT: 0.7in" =
class=3Dhanging-indent>Note that=20
the rest of values are not reserved and administrator is free to assign =
or not=20
assign protocol tags. Routing daemons at least should take care of =
setting some=20
unique protocol values for themselves such as they are assigned in =
rtnetlink.h=20
or in the rt_protos database.</P>
<P style=3D"TEXT-INDENT: 0in; MARGIN-LEFT: 0.7in" =
class=3Dhanging-indent><BR></P>
<P class=3Dfirst-line-indent>onlink --- pretend that the nexthop is =
directly=20
attached to this link, even if it does match any interface prefix. One=20
application of this option may be found in ip tunnels between dissimilar =

addresses.</P>
<P class=3Dfirst-line-indent>equalize --- allow packet by packet =
randomization on=20
multipath routes. Without this modifier route will be frozen to one =
selected=20
nexthop, so that load splitting will occur only on per-flow base. =
Equalize works=20
only if the appropriate kernel configuration option is chosen or if the =
kernel=20
is patched.</P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Two more commands, prepend =
and append do=20
exist. Prepend does the same thing as the classic route add command by =
adding=20
the route even if another route to the same destination already exists. =
The=20
opposite case is append which adds the route to the end of the list. We =
strongly=20
reccommend that you avoid using these commands.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Unfortunately, IPv6 currently =
only=20
understands the append command correctly, all the rest of the set =
translating to=20
append. Certainly, this will change in the future.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Examples</B>:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Add a plain route to network =
10.0.0/24=20
via gateway 193.233.7.65</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip route add 10.0.0/24 via=20
193.233.7.65</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>change it to a direct route =
via device=20
dummy</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip ro chg 10.0.0/24 via =
193.233.7.65 dev=20
dummy</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Add default multipath route =
splitting=20
load between ppp0 and ppp1</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip route add default scope =
global nexthop=20
dev ppp0 nexthop dev ppp1</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Note the scope value which is =
not=20
necessary but prompts the kernel that this route is gatewayed rather =
than=20
direct. Actually, if you know the addresses of the remote endpoints it =
would be=20
better to specify them using the parameter via.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>NAT the address =
192.203.80.144 to=20
193.233.7.83 before forwarding</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip route add nat =
192.203.80.142 via=20
193.233.7.83</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Note that the reverse NAT =
translation is=20
setup with policy rules as described in the policy routing=20
section.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.5.4>ip=20
route delete</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Abbreviations</B>: delete, =
del,=20
d.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip route del has the same =
arguments as ip=20
route add but their semantics are a bit different.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Key values (dest, tos, =
preference and=20
table) select the route to delete. If any optional attributes are =
present, ip=20
verifies that they coincide with attributes of the route to delete. If =
no route=20
with given key and attributes is found then ip route del=20
fails.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Linux kernel 2.0 had the =
ability to=20
delete a route selected only by the prefix address while ignoring its =
netmask.=20
This option does not exist anymore due to the ambiguous nature of the =
selection.=20
If you wish to have such functionality then look at the ip route flush =
command=20
which provides a richer set of capabilities.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Examples</B>:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Delete the multipath route =
created by the=20
add example previously</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip route del default scope =
global nexthop=20
dev ppp0 nexthop dev ppp1</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.5.5>ip=20
route show</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Abbreviations</B>: show, =
list, sh, ls,=20
l.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>This format of the command =
allows viewing=20
the routing tables contents and looking at route(s) as selected by some=20
criteria.</FONT></FONT></P>
<P style=3D"MARGIN-BOTTOM: 0.17in"><SPAN style=3D"TEXT-DECORATION: =
none"><SPAN=20
style=3D"FONT-STYLE: normal"><FONT size=3D3><FONT=20
face=3D"courier, =
monospace"><B>Arguments</B>:</FONT></FONT></SPAN></SPAN></P>
<P class=3D1indent>to SELECTOR (default) --- select routes only from the =
given=20
range of destinations. SELECTOR has optional modifiers (root, match or =
exact)=20
and a prefix.</P>
<P class=3D1indent>root PREFIX selects routes with prefixes not shorter =
than=20
PREFIX. IE: root 0/0 selects all the routing table. </P>
<P class=3D1indent>match PREFIX selects routes with prefixes not longer =
than=20
PREFIX. match 10.0/16 selects 10.0/16, 10/8 and 0/0, but it does not =
select=20
10.1/16 and 10.0.0/24. </P>
<P class=3D1indent>exact PREFIX (or just PREFIX) selects routes exactly =
with this=20
prefix.</P>
<P class=3D1indent>If none of these options are present then the ip =
command=20
assumes root 0/0 which lists the entire table.</P>
<P class=3D1indent>tos TOS or dsfield TOS --- Select only routes with =
given=20
TOS.</P>
<P class=3D1indent>table TABLEID --- Show routes from this table(s). =
Default=20
setting is to show table main (ID 254). TABLEID may be either ID of a =
real table=20
or one of the special values:</P>
<P class=3D1indent><BR><BR></P>
<P class=3D2indent>all --- list all the tables.</P>
<P class=3D2indent><BR><BR></P>
<P class=3D2indent>cache --- dump routing cache.</P>
<P class=3D2indent><BR><BR></P>
<P class=3D2indent>IPv6 has only a single table, however splitting into =
main,=20
local, and cache is emulated by the ip utility.</P>
<P class=3D2indent><BR><BR></P>
<P class=3D2indent>cloned or cached --- list cloned routes which are =
routes=20
dynamically forked off of other routes because some route attribute =
(like MTU)=20
was updated. It is equivalent to table cache.</P>
<P class=3D2indent><BR><BR></P>
<P class=3D1indent>from SELECTOR --- the same syntax as to SELECTOR but =
bounds the=20
source address range rather than the destination. Note that the from =
option only=20
works with cloned routes.</P>
<P class=3D1indent>protocol RTPROTO --- list only routes of this =
protocol.</P>
<P class=3D1indent>scope SCOPE_VAL --- list only routes with this =
scope.</P>
<P class=3D1indent>type TYPE --- list only routes of this type.</P>
<P class=3D1indent>dev NAME --- list only routes going via this =
device.</P>
<P class=3D1indent>via PREFIX --- list only routes going via selected by =
PREFIX=20
nexthop routers.</P>
<P class=3D1indent>src PREFIX --- list only routes with preferred source =
addresses=20
selected by PREFIX.</P>
<P class=3D1indent>realm REALMID or realms FROMREALM/TOREALM --- list =
only routes=20
with these realms.</P>
<P class=3D1indent><BR><BR></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Using this command is best =
explained by=20
running through some examples.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Example</B>: Let us count =
the routes=20
of protocol gated/bgp on a router</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@amber~ $ ip route list =
proto=20
gated/bgp | wc</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>1413 9891 =
79010</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@amber~ =
$</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>To count size of routing =
cache we have to=20
use option -o, because cached attributes can take more than one line of =
the=20
output</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@amber~ $ ip -o route =
list cloned |=20
wc</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>159 2543 =
18707</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@amber~ =
$</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The output of this command =
consists of=20
per route records separated by line feeds. However, some records may =
consist of=20
more than one line particularly when the route is cloned or you have =
requested=20
additional statistics. If the option -o is given, then line feeds =
separating=20
lines inside records are replaced with backslash sign.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The output has the same =
syntax as=20
arguments given to ip route add, so that it can be understood=20
easily.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@amber~ $ ip route list =

193.233.7/24</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>193.233.7.0/24 dev eth0 proto =
gated/conn=20
scope link \</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>src 193.233.7.65 realms=20
inr.ac</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@amber~ =
$</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>If you list cloned entries =
the output=20
contains other attributes, which are evaluated during route calculation =
and=20
updated during route lifetime. The example of the output =
is:</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@amber~ $ ip route list =

193.233.7.82 table cache</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>193.233.7.82 from =
193.233.7.82 dev eth0=20
src 193.233.7.65 \</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>realms =
inr.ac/inr.ac</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>cache =
&lt;src-direct,redirect&gt; mtu=20
1500 rtt 300 iif eth0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>193.233.7.82 dev eth0 src =
193.233.7.65=20
realms inr.ac</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>cache mtu 1500 rtt =
300</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@amber~ =
$</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>This route looks a bit =
strange, does it=20
not? Did you notice that this is the path from 193.233.7.82 back to =
193.233.82?=20
In the section on ip route get you will see how this route is=20
created.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The second line which starts =
with the=20
word cache shows the additional attributes which normal routes do not =
possess.=20
The cache flags contained within the angle brackets =
are:</FONT></FONT></P>
<P class=3D2indent>local --- packets are delivered locally. It stands =
for loopback=20
unicast routes, for broadcast routes, and for multicast routes if this =
host is=20
member of the corresponding group.</P>
<P class=3D2indent>reject --- the path is bad. Any attempt to use it =
results in=20
error. See attribute error below.</P>
<P class=3D2indent>mc --- the destination is multicast.</P>
<P class=3D2indent>brd --- the destination is broadcast.</P>
<P class=3D2indent>src-direct --- the source is on a directly connected=20
interface.</P>
<P class=3D2indent>redirected --- the route was created by an ICMP =
Redirect.</P>
<P class=3D2indent>redirect --- packets going via this route will =
trigger ICMP=20
redirect.</P>
<P class=3D2indent>fastroute --- route is eligible to be used for =
fastroute.</P>
<P class=3D2indent>equalize --- make packet by packet randomization =
along this=20
path.</P>
<P class=3D2indent>dst-nat --- destination address requires =
translation.</P>
<P class=3D2indent>src-nat --- source address requires translation.</P>
<P class=3D2indent>masq --- source address requires masquerading.</P>
<P class=3D2indent>notify --- (not implemented) change/deletion of this =
route will=20
trigger RTNETLINK notification.</P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The following are optional =
attributes=20
that may be present:</FONT></FONT></P>
<P class=3D2indent>error --- on reject routes this is the error code =
returned to=20
local senders when they try to use this route. These error codes are =
translated=20
to ICMP error codes sent to remote senders according to the rules =
described=20
above in the subsection devoted to route types.</P>
<P class=3D2indent>expires --- this entry will expire after this =
timeout.</P>
<P class=3D2indent>iif --- the packets for this path are expected to =
arrive on=20
this interface.</P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Giving the option -statistics =
will show=20
further information about this route:</FONT></FONT></P>
<P class=3D2indent>users --- number of users of this entry.</P>
<P class=3D2indent>age --- shows when this route was used last time.</P>
<P class=3D2indent>used --- number of lookups of this route since its=20
creation.</P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.5.6>ip=20
route flush - allows group deletion of routes</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Abbreviations</B>: flush,=20
f.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>This command allows flushing =
routes as=20
selected by some criteria.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The arguments have the same =
syntax and=20
semantics as the arguments of ip route show but the routing tables are =
purged=20
rather than listed. The only difference is the default action performed. =
Where=20
the ip route show command dumps the main IP routing table, ip route =
flush prints=20
the help page. The reason for this difference does not require an =
explanation=20
does it?</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>With the option -statistics =
the command=20
becomes verbose and prints out the number of deleted routes and the =
number of=20
rounds needed to flush the routing table. If the option is given twice =
then ip=20
route flush also dumps all deleted routes in the format described in the =

previous subsection.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Examples</B>:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The first example flushes all =
the=20
gatewayed routes from main table such as after a routing daemon=20
crash.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>netadm@amber~ # ip -4 ro =
flush scope=20
global type unicast</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>This option deserved to be =
put into the=20
scriptlet routef available within the IPROUTE2 utility distribution. =
This option=20
was described in the route(8) man page as borrowed from BSD but was =
never=20
implemented in Linux.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The second example is =
flushing all IPv6=20
cloned routes:</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>netadm@amber~ # ip -6 -s -s =
ro flush=20
cache</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>3ffe2400220affffef4c5d1 via=20
3ffe2400220affffef4c5d1 \</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>dev eth0 metric =
0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>cache used 2 age 12sec mtu =
1500 rtt=20
300</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>3ffe2400280adfffeb78034 via=20
3ffe2400280adfffeb78034 \</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>dev eth0 metric =
0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>cache used 2 age 15sec mtu =
1500 rtt=20
300</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>3ffe2400280c8fffe595bcc via=20
3ffe2400280c8fffe595bcc \</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>dev eth0 metric =
0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>cache users 1 used 1 age =
23sec mtu 1500=20
rtt 300</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>3ffe2400012a0ccfffe661878 via =

3ffe2400012a0ccfffe661878 \</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>dev eth1 metric =
0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>cache used 2 age 20sec mtu =
1500 rtt=20
300</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>3ffe240001a0020fffe71fb30 via =

3ffe240001a0020fffe71fb30 \</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>dev eth1 metric =
0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>cache used 2 age 33sec mtu =
1500 rtt=20
300</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ff021 via ff021 dev eth1 =
metric=20
0</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>cache users 1 used 1 age =
45sec mtu 1500=20
rtt 300</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***Round 1, deleting 6=20
entries***</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***Flush is complete after 1=20
round***</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>netadm@amber~ # ip -6 -s -s =
ro flush=20
cache</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Nothing to =
flush.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The third example is flushing =
BGP routing=20
tables after gated death.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>netadm@amber~ # ip ro ls =
proto gated/bgp=20
wc</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>1408 9856 =
78730</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>netadm@amber~ # ip -s ro f =
proto=20
gated/bgp</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***Round 1, deleting 1408=20
entries***</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***Flush is complete after 1=20
round***</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>netadm@amber~ # ip ro f proto =

gated/bgp</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Nothing to =
flush.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>netadm@amber~ # ip ro ls =
proto=20
gated/bgp</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.5.7>ip=20
route get - obtain route pathing</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Abbreviations</B>: get,=20
g.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>This command gets a single =
route to a=20
destination and prints its contents exactly as kernel sees =
it.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Arguments</B>:</FONT></FONT></P>
<P class=3D1indent>to ADDRESS (default) --- destination address.</P>
<P class=3D1indent>from ADDRESS --- source address.</P>
<P class=3D1indent>tos TOS or dsfield TOS --- Type Of Service.</P>
<P class=3D1indent>iif NAME --- device, which this packet is expected to =
arrive=20
from.</P>
<P class=3D1indent>oif NAME --- enforce output device, which this packet =
will be=20
routed out.</P>
<P class=3D1indent>connected --- if no source address (option from) was =
given,=20
relookup the route with the source address set to the preferred address =
as=20
received from the first lookup. If policy routing is used this may be a=20
different route.</P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Note that this operation is =
not=20
equivalent to ip route show. ip route show shows the existing routes, ip =
route=20
get resolves them and creates new clones if necessary. Essentially, ip =
route get=20
is equivalent to actually sending a packet along this path. If the =
argument iif=20
is not given then the kernel creates a route to output packets towards =
requested=20
destination. This is equivalent to pinging the destination then running =
ip route=20
list cache but in the case of ip route get no packets are actually sent. =
With=20
the argument iif present the kernel pretends that a packet has arrived =
from this=20
interface and searches for a path to forward the packet. This command =
outputs=20
routes in the same format as ip route ls.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Examples</B>:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Find route to output packets =
to=20
193.233.7.82:</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@amber~ $ ip route get=20
193.233.7.82</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>193.233.7.82 dev eth0 src =
193.233.7.65=20
realms inr.ac</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>cache mtu 1500 rtt =
300</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@amber~ =
$</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Find route to forward packets =
arriving on=20
eth0 from 193.233.7.82 and destined to 193.233.7.82:</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@amber~ $ ip route get =
193.233.7.82=20
from 193.233.7.82 iif eth0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>193.233.7.82 from =
193.233.7.82 dev eth0=20
src 193.233.7.65 \</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>realms =
inr.ac/inr.ac</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>cache =
&lt;src-direct,redirect&gt; mtu=20
1500 rtt 300 iif eth0</FONT></FONT></P>
<P style=3D"MARGIN-BOTTOM: 0.17in"><FONT style=3D"FONT-SIZE: 8pt" =
size=3D1><SPAN=20
style=3D"TEXT-DECORATION: none"><SPAN style=3D"FONT-STYLE: normal"><FONT =

size=3D3><FONT face=3D"courier, monospace">kuznet@amber~=20
$</FONT></FONT></SPAN></SPAN></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>This is the operation that =
created the=20
funny route in the examples to ip route list with 193.233.7.82 looped =
back to=20
193.233.7.82. Note the redirect flag present on the =
output.</FONT></FONT></P>
<P style=3D"MARGIN-BOTTOM: 0.17in"><SPAN style=3D"TEXT-DECORATION: =
none"><SPAN=20
style=3D"FONT-STYLE: normal"><FONT size=3D3><FONT face=3D"courier, =
monospace">Find=20
multicast route for packets arriving on eth0 from host 193.233.7.82 and =
destined=20
to multicast group 224.2.127.254 assuming that a multicast routing =
daemon is=20
running such as in this case we are running=20
pimd.</FONT></FONT></SPAN></SPAN></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@amber~ $ ip route get=20
224.2.127.254 from 193.233.7.82 iif eth0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>multicast 224.2.127.254 from =
193.233.7.82=20
dev lo \</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>src 193.233.7.65 realms=20
inr.ac/cosmos</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>cache &lt;mc&gt; iif eth0 =
Oifs eth1=20
pimreg</FONT></FONT></P>
<P style=3D"MARGIN-BOTTOM: 0.17in"><FONT style=3D"FONT-SIZE: 8pt" =
size=3D1><SPAN=20
style=3D"TEXT-DECORATION: none"><SPAN style=3D"FONT-STYLE: normal"><FONT =

size=3D3><FONT face=3D"courier, monospace">kuznet@amber~=20
$</FONT></FONT></SPAN></SPAN></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>This route differs from the =
ones seen=20
before. It contains a normal part and a multicast part. The normal part =
is used=20
to deliver or not deliver the packet to local IP listeners. In this case =
the=20
router is not acting as a member of the multicast group so the route has =
no=20
local flag and only forwards packets. The output device for such entries =
is=20
always loopback. The multicast part consists of an additional Oifs list =
showing=20
the output interfaces.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Now it is time for a more =
complicated=20
example. Let us add an invalid gatewayed route for a destination which =
is really=20
directly connected.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>netadm@alisa~ # ip route add =
193.233.7.98=20
via 193.233.7.254</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>netadm@alisa~ # ip route get=20
193.233.7.98</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>193.233.7.98 via =
193.233.7.254 dev eth0=20
src 193.233.7.90</FONT></FONT></P>
<P style=3D"MARGIN-BOTTOM: 0in"><FONT style=3D"FONT-SIZE: 8pt" =
size=3D1><SPAN=20
style=3D"TEXT-DECORATION: none"><SPAN style=3D"FONT-STYLE: normal"><FONT =

size=3D3><FONT face=3D"courier, monospace">cache mtu 1500 rtt=20
3072</FONT></FONT></SPAN></SPAN></FONT></P>
<P style=3D"MARGIN-BOTTOM: 0in"><BR></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>and probe it with =
ping</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>netadm@alisa~ # ping -n=20
193.233.7.98</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>PING 193.233.7.98 =
(193.233.7.98) from=20
193.233.7.90 56 data bytes</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>From 193.233.7.254 Redirect =
Host(New=20
nexthop 193.233.7.98)</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>64 bytes from 193.233.7.98 =
icmp_seq=3D0=20
ttl=3D255 time=3D3.5 ms</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>From 193.233.7.254 Redirect =
Host(New=20
nexthop 193.233.7.98)</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>64 bytes from 193.233.7.98 =
icmp_seq=3D1=20
ttl=3D255 time=3D2.2 ms</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>64 bytes from 193.233.7.98 =
icmp_seq=3D2=20
ttl=3D255 time=3D0.4 ms</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>64 bytes from 193.233.7.98 =
icmp_seq=3D3=20
ttl=3D255 time=3D0.4 ms</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>64 bytes from 193.233.7.98 =
icmp_seq=3D4=20
ttl=3D255 time=3D0.4 ms</FONT></FONT></P>
<P style=3D"MARGIN-BOTTOM: 0in"><FONT style=3D"FONT-SIZE: 8pt" =
size=3D1><SPAN=20
style=3D"TEXT-DECORATION: none"><SPAN style=3D"FONT-STYLE: normal"><FONT =

size=3D3><FONT face=3D"courier, =
monospace">^C</FONT></FONT></SPAN></SPAN></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>--- 193.233.7.98 ping =
statistics=20
---</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>5 packets transmitted, 5 =
packets=20
received, 0% packet loss</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>round-trip min/avg/max =3D =
0.4/1.3/3.5=20
ms</FONT></FONT></P>
<P style=3D"MARGIN-BOTTOM: 0.17in"><BR><BR></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>What occured? The router at =
193.233.7.254=20
understood that we have a much better path to the destination and sent =
us an=20
ICMP redirect message. We now retry ip route get to see what we have in =
our=20
routing tables.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>netadm@alisa~ # ip route get=20
193.233.7.98</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>193.233.7.98 dev eth0 src=20
193.233.7.90</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>cache &lt;redirected&gt; mtu =
1500 rtt=20
3072</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><BR><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.6>ip=20
rule --- routing policy database management.</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Abbreviations</B>: rule,=20
ru.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Rules in routing policy =
database=20
controlling route selection algorithm.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Classic routing algorithms =
used in the=20
Internet make routing decisions based only on the destination address of =
packets=20
and in theory, but not in practice, on the TOS field. In some =
circumstances we=20
want to route packets differently depending not only on the destination=20
addresses, but also on other packet fields such as source address, IP =
protocol,=20
transport protocol ports or even packet payload. This task is called =
"policy=20
routing".</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>"policy routing" !=3D =
"routing=20
policy"</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>"policy routing" =3D "cunning =

routing"</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>"routing policy" =3D "routing =
tactics" or=20
"routing plan"</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>To solve this task the =
conventional=20
destination based routing table, ordered according to the longest match =
rule, is=20
replaced with the "routing policy database" or RPDB, which selects the=20
appropriate route through execution of some set of rules. These rules =
may have=20
many keys of different natures and therefore they have no natural =
ordering=20
excepting that which is imposed by the network administrator. In Linux =
the RPDB=20
is a linear list of rules ordered by a numeric priority value. The RPDB=20
explicitly allows matching packet source address, packet destination =
address,=20
TOS, incoming interface (which is packet metadata, rather than a packet =
field),=20
and using fwmark values for matching IP protocols and transport=20
ports.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Each routing policy rule =
consists of a=20
selector and an action predicate. The RPDB is scanned in the order of =
increasing=20
priority with the selector of each rule applied to the source address,=20
destination address, incoming interface, tos, and fwmark. If the =
selector=20
matches the packet the action is performed. The action predicate may =
return=20
success in which case the rule output provides either a route or a =
failure=20
indication and RPDB lookup is then terminated. Otherwise, the RPDB =
program=20
continues on to the next rule.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>What is the action =
semantically? The=20
natural action is to select the nexthop and output device. This is the =
way a=20
packet path route is selected by Cisco IOS, let us call it "match &amp; =
set". In=20
Linux the approach is more flexible as the action includes lookups in=20
destination-based routing tables and selecting a route from these tables =

according to classic longest match algorithm. The "match &amp; set" =
approach=20
then becomes the simplest case of Linux route selection realized when =
the second=20
level routing table contains a single default route. Remember that Linux =

supports multiple routing tables managed with ip route=20
command.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>At startup the kernel =
configures a=20
default RPDB consisting of three rules:</FONT></FONT></P>
<P class=3D1indent>1. Priority 0: Selector =3D match anything</P>
<P class=3D1indent>Action =3D lookup routing table local (ID 255).</P>
<P class=3D1indent>The table local is the special routing table =
containing high=20
priority control routes for local and broadcast addresses.</P>
<P style=3D"TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; MARGIN-LEFT: =
0.7in"><SPAN=20
style=3D"TEXT-DECORATION: none"><SPAN style=3D"FONT-STYLE: normal"><FONT =

size=3D3><FONT face=3D"courier, monospace">Rule 0 is special, it cannot =
be deleted=20
or overridden.</FONT></FONT></SPAN></SPAN></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>2. Priority 32766: Selector =
=3D match=20
anything</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Action =3D lookup routing =
table main (ID=20
254)</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The table main is the normal =
routing=20
table containing all non-policy routes. This rule may be deleted or =
overridden=20
with other rules.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>3. Priority 32767: Selector =
=3D match=20
anything</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Action =3D lookup routing =
table default (ID=20
253).</FONT></FONT></P>
<P style=3D"MARGIN-LEFT: 0.7in">The table default is empty and reserved =
for=20
post-processing if previous default rules did not select the packet. =
This rule=20
also may be deleted.</P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Do not mix routing tables and =
rules.=20
Rules point to routing tables, several rules may refer to one routing =
table and=20
some routing tables may have no rules pointing to them. If you delete =
all the=20
rules referring to a table then the table is not used but still exists. =
A=20
routing table will disappear only after all the routes contained within =
it are=20
deleted.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Rule attributes</B>: Each =
RPDB entry=20
has additional attributes attached. Each rule has a pointer to some =
routing=20
table. NAT and masquerading rules have the attribute to select a new IP =
address=20
to translate/masquearade. Additionally rules have some of the optional=20
attributes which routes have such as realms. These values do not =
override those=20
contained in routing tables, they are used only if the route did not =
select any=20
of those attributes.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Rule types</B>: The RPDB =
may contain=20
rules of the following types.</FONT></FONT></P>
<P class=3D1indent>unicast --- the rule prescribes returning the route =
found in=20
the routing table referenced by the rule.</P>
<P class=3D1indent>blackhole --- the rule prescribes to drop packet =
silently.</P>
<P class=3D1indent>unreachable --- the rule prescribes generating the =
error=20
"Network is unreachable".</P>
<P class=3D1indent>prohibit --- the rule prescribes generating the error =

"Communication is administratively prohibited".</P>
<P class=3D1indent>nat --- the rule prescribes translating the source =
address of=20
the IP packet to some other value.</P>
<P class=3D1indent><BR><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.6.1>ip=20
rule add --- insert new rule</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Abbreviations</B>: add, a; =
delete,=20
del, d.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Arguments</B>:</FONT></FONT></P>
<P class=3D1indent>type TYPE (default) --- type of this rule. The list =
of valid=20
types was given in the previous subsection.</P>
<P class=3D1indent>from PREFIX --- select source prefix to match.</P>
<P class=3D1indent>to PREFIX --- select destination prefix to match.</P>
<P class=3D1indent>iif NAME --- select incoming device to match. If the =
interface=20
is loopback, the rule matches only packets originated by this host. It =
means=20
that you may create separate routing tables for forwarded and local =
packets and,=20
hence, completely segregate them.</P>
<P class=3D1indent>tos TOS or dsfield TOS --- select TOS value to =
match.</P>
<P class=3D1indent>fwmark MARK --- select value of fwmark to match.</P>
<P class=3D1indent>priority PREFERENCE --- priority of this rule. Each =
rule should=20
have an explicitly set unique priority value. Priority is an unsigned 32 =
bit=20
number thus we have 4294967296 possible rules.</P>
<P class=3D1indent><BR><BR></P>
<P class=3D1indent align=3Dcenter><B>WARNING!</B></P>
<P class=3D1indent><BR><BR></P>
<P class=3Ddblindent>For historical reasons ip rule add does not require =
any=20
priority value and allows the priority value to be non-unique. If the =
user had=20
not supplied a priority value then one was assigned by the kernel.If the =
user=20
requested creating a rule with a priority value which already existed =
then the=20
kernel did not reject the request and added the new rule before all old =
rules of=20
the same priority. This is a mistake in the current design, nothing =
more. It=20
should be fixed by the time you read this so please do not rely on this =
feature.=20
You should always use explicit priorities when creating rules.</P>
<P class=3Ddblindent><BR><BR></P>
<P class=3D1indent>table TABLEID --- routing table identifier to lookup =
if the=20
rule selector matches.</P>
<P class=3D1indent>realms FROM/TO --- Realms to select if the rule =
matched and=20
routing table lookup succeeded. Realm TO is used only if the route =
returned did=20
not select any realm.</P>
<P class=3D1indent>nat ADDRESS --- The base of IP address block to =
translate=20
source address. The ADDRESS may be either the start of a block of NAT =
addresses=20
as selected by NAT routes, a local host address, or even zero. In the =
last two=20
cases the Linux router does not NAT translate the packets but =
masquerades them=20
to this address.</P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Changes to the RPDB made with =
these=20
commands do not become active immediately. You should run ip route flush =
cache=20
to flush out the routing cache after inserting rules.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Examples</B>:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Route packets with source =
addresses from=20
192.203.80/24 according to routing table inr.ruhep</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip rule add from =
192.203.80.0/24 table=20
inr.ruhep prio 220</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Translate packet source =
193.233.7.83 to=20
192.203.80.144 and route it according to table #1 (Table #1 is defined =
in=20
/etc/iproute/rt_tables as inr.ruhep)</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip rule add from 193.233.7.83 =
nat=20
192.203.80.144 table 1 prio 320</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Delete unused default=20
rule</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip rule del prio =
32767</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.6.2>ip=20
rule show - list policy rules</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Abbreviations</B>: show, =
list, sh, ls,=20
l.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Good news - this is the only =
command=20
which has no arguments. Here is the example:</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@amber~ $ ip rule=20
list</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>0 from all lookup =
local</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>200 from 192.203.80.0/24 to=20
193.233.7.0/24 lookup main</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>210 from 192.203.80.0/24 to=20
192.203.80.0/24 lookup main</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>220 from 192.203.80.0/24 =
lookup inr.ruhep=20
realms inr.ruhep/radio-msu</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>300 from 193.233.7.83 to =
193.233.7.0/24=20
lookup main</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>310 from 193.233.7.83 to =
192.203.80.0/24=20
lookup main</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>320 from 193.233.7.83 lookup =
inr.ruhep=20
map-to 192.203.80.144</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>32766 from all lookup=20
main</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><BR><BR></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>In the first position the =
rule priority=20
value stands followed by a colon. Then the selectors follow with each =
key=20
prefixed by the keyword used to create the rule.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The keyword lookup is =
followed by the=20
routing table identifier as recorded in the file=20
/etc/iproute2/rt_tables.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>If the rule does NAT, as in =
rule #320, it=20
is shown by the keyword map-to followed by the start of the block of =
addresses=20
to map.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The sense of this example is =
pretty=20
simple. The prefixes 192.203.80.0/24 and 193.233.7.0/24 form an internal =
network=20
but each prefix is routed differently. Additionally, the host =
193.233.7.83 is=20
translated to another prefix as 192.203.80.144 when talking to the outer =

world.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.7>ip=20
tunnel - ip tunnelling configuration</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Abbreviations</B>: tunnel, =

tunl.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The tunnel objects are =
tunnels=20
encapsulating packets within IPv4 packets and sending them over the IP=20
infrastructure.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.7.1>ip=20
tunnel add - creating tunnels</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Abbreviations</B>: add,=20
a</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Arguments</B>:</FONT></FONT></P>
<P class=3D1indent>name NAME (default) --- select tunnel device =
name.</P>
<P class=3D1indent>mode MODE --- set tunnel mode. Three modes are =
available: ipip,=20
sit, gre</P>
<P class=3D1indent>remote ADDRESS --- set remote endpoint of the =
tunnel.</P>
<P class=3D1indent>local ADDRESS --- set fixed local address for =
tunneled packets.=20
It must be an address on another interface of this host.</P>
<P class=3D1indent>ttl N --- set fixed TTL N on tunneled packets. N is =
number in=20
the range 1--255. 0 is special value, meaning that packets inherit TTL =
value.=20
Default value is inherit.</P>
<P class=3D1indent>tos TOS or dsfield TOS --- set fixed TOS on tunneled =
packets.=20
Default value is inherit.</P>
<P class=3D1indent>dev NAME --- bind tunnel to device NAME, so that =
tunneled=20
packets will be routed only via this device and will not able to escape =
to=20
another device, when route to endpoint changes.</P>
<P class=3D1indent>nopmtudisc --- disable Path MTU Discovery on this =
tunnel. It is=20
enabled by default. Note that a fixed ttl is incompatible with this =
option. A=20
tunnel with fixed ttl always performs pmtu discovery.</P>
<P class=3D1indent>key K, ikey K, okey K --- (GRE only) use keyed GRE =
with key K.=20
K is either number or IP address-like dotted quad. The parameter key =
sets key to=20
use in both directions, ikey and okey allow setting different keys for =
input and=20
output.</P>
<P class=3D1indent>csum, icsum, ocsum --- (GRE only) checksum tunneled =
packets.=20
The flag ocsum orders checksumming outgoing packets, icsum requires that =
all the=20
input packets have a correct checksum. csum is equivalent to the =
combination=20
"icsum ocsum".</P>
<P class=3D1indent>seq, iseq, oseq --- (GRE only) serialize packets. The =
flag oseq=20
enables sequencing outgouing packets, iseq requires that all the input =
packets=20
were serialized. seq is equivalent to the combination "iseq oseq".</P>
<P class=3Ddblindent>I think this option does not work. At least, I did =
not test=20
it, did not debug it and even do not understand, how it is supposed to =
work and=20
for what purpose Cisco planned to use it. Do not use it. -- Alexey</P>
<P class=3Ddblindent><BR><BR></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Examples</B>:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Create pointopoint IPv6 =
tunnel with=20
maximal TTL of 32.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip tunl add Cisco mode sit =
remote=20
192.31.7.104 local 192.203.80.142 ttl 32</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.7.2>ip=20
tunnel show - list tunnel attributes</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3><B>Abbreviations</B>: show, =
list, sh, ls,=20
l.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3><B>Example</B>:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@amber~ $ ip tunl ls=20
Cisco</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Cisco: ipv6/ip remote =
192.31.7.104 local=20
192.203.80.142 ttl 32</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><BR><BR></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The line starts with the =
tunnel device=20
name terminated by a colon then the tunnel mode follows. The parameters =
of the=20
tunnel are listed with the same keywords which were used at tunnel=20
creation.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@amber~ $ ip -s tunl ls =

Cisco</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Cisco ipv6/ip remote =
192.31.7.104 local=20
192.203.80.142 ttl 32</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>RX Packets Bytes Errors =
CsumErrs OutOfSeq=20
Mcasts</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>12566 1707516 0 0 0 =
0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>TX Packets Bytes Errors =
DeadLoop NoRoute=20
NoBufs</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>13445 1879677 0 0 0 =
0</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><BR><BR></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Essentially these numbers are =
the same as=20
those printed using ip -s link show but the tags are different to =
reflect tunnel=20
specific features. These features are:</FONT></FONT></P>
<P class=3D2indent>CsumErrs --- total number of packets dropped because =
of=20
checksum failures for GRE tunnel with enabled checksumming.</P>
<P class=3D2indent>OutOfSeq --- total number of packets dropped because =
they=20
arrived out of sequence for GRE tunnel with enabled serialization.</P>
<P class=3D2indent>Mcasts --- total number of multicast packets, =
received on=20
broadcast GRE tunnel.</P>
<P class=3D2indent>DeadLoop --- total number of packets, which were not=20
transmitted because tunnel is looped back to itself.</P>
<P class=3D2indent>NoRoute --- total number of packets, which were not =
transmitted=20
because there is no IP route to remote endpoint.</P>
<P class=3D2indent>NoBufs --- total number of packets, which were not =
transmitted=20
because kernel failed to allocate buffer.</P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.8>ip=20
monitor and rtmon --- route state monitoring</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The ip utility allows =
monitoring the=20
state of devices, addresses, and routes continuously. This option has a=20
different format in that the command monitor is first on the command =
line=20
followed by the object list.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip monitor [ file FILE ] [ =
all=20
OBJECT-LIST ]</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>OBJECT-LIST is the list of =
object types=20
which we want to monitor. It may contain link, address, and route. If no =
file=20
argument is given, ip opens RTNETLINK, listens to it and dumps the state =
changes=20
in the format as described in the previous sections.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>If a file name is given ip =
does not=20
listen to RTNETLINK but opens the file which is assumed to contain =
RTNETLINK=20
messages saved in binary format and dumps them. Such a history file can =
be=20
generated with the utility rtmon. This utility has a command line syntax =
similar=20
to ip monitor. Ideally, rtmon should be started before the first network =

configuration command is issued. It is possible to start rtmon at any =
time as it=20
prepends the history with the system state snapshot dumped at the moment =
of=20
startup.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A=20
name=3Dss9.9>rtacct - route realms and policy=20
propagation</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>On routers using OSPF ASE or =
especially=20
the BGP protocol, the routing tables may be huge. If we want to classify =
or=20
account for the packets per route, we will have to keep lots of =
information.=20
Even worse, if we want to distinguish the packets not only by their =
destination,=20
but also by their source, the task presents a quadratic complexity and =
its=20
solution is physically impossible.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>One approach for propagating =
the policy=20
from routing protocols to the forwarding engine has been proposed. =
Essentially,=20
Cisco Policy Propagation via BGP is based on the fact that dedicated =
routers=20
have the entire RIB (Routing Information Base) close to forwarding =
engine so=20
that policy routing rules can check all the route attributes including =
ASPATH=20
information and community strings.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Within the Linux architecture =
where we=20
have a split RIB as maintained by user level daemon, and the kernel =
based FIB=20
(Forwarding Information Base), we cannot allow such a simplistic=20
approach.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Fortunately there exists =
another solution=20
allowing an even more flexible policy with rich semantics. Routes can be =

clustered together in user space based on their attributes. IE: A BGP =
router=20
knows the route ASPATH or its community whereas an OSPF router knows the =
route=20
tag or its area. A network administrator adding routes manually knows =
the nature=20
of those routes. Providing that the number of such aggregates, which we =
call=20
realms, is low, the task of full classification both by source and =
destination=20
becomes quite manageable.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>So each route may be assigned =
to a realm.=20
It is assumed that this identification is made by a routing daemon, but =
static=20
routes may also be assigned manually through ip route.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Currently there exists a =
patch to gated=20
allowing it to classify routes to realms over all the set of policy =
rules. This=20
classification is implemented within gated by prefix, ASPATH, origin, =
tag,=20
etc.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>To facilitate this =
construction in the=20
case when the routing daemon is not aware of realms, missing realms may =
be=20
completed with routing policy rules.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>For each packet the kernel =
calculates the=20
tuple of realms, source realm and destination realm, using the following =

algorithm:</FONT></FONT></P>
<P class=3D1indent>1. If route has a realm, destination realm of the =
packet is set=20
to it.</P>
<P class=3D1indent>2. If rule has a source realm, source realm of the =
packet is=20
set to it.</P>
<P class=3D1indent>3. If destination realm was not obtained from route =
and rule=20
has destination realm, set destination realm from rule.</P>
<P class=3D1indent>4. If at least one of realms is still unknown, kernel =
finds=20
reversed route to the source of the packet.</P>
<P class=3D1indent>5. If source realm is still unknown, get it from =
reversed=20
route.</P>
<P class=3D1indent>6. If one of realms is still unknown, swap realms of =
reversed=20
routes and apply step 2 again.</P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>After this procedure is =
completed, we=20
know what realm the packet arrived from and the realm where it is going =
to=20
propagate to. If any of the realms is unknown, it is initialized to zero =
(or=20
realm unknown).</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The main application of =
realms is in=20
conjunction with the tc route classifier where they are used to help =
assign=20
packets to traffic classes, for accounting, policing, and scheduling =
them=20
according to the classification. </FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>A much simpler but still very =
useful=20
application is packet path accounting by realms. The kernel gathers a =
packet=20
statistics summary which can be viewed with utility =
rtacct.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>kuznet@amber~ $ rtacct=20
russia</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Realm BytesTo PktsTo =
BytesFrom=20
PktsFrom</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>russia 20576778 169176 =
47080168=20
153805</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><BR><BR></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>This output shows that this =
router has=20
received 153805 packets from realm russia and forwarded 169176 packets =
to=20
russia. The realm russia consists of routes with ASPATHs not leaving=20
russia.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Note that locally originated =
packets are=20
not accounted here as rtacct shows ingoing packets only. Using the route =

classifier you can get even more detailed accounting information about =
outgoing=20
packets, optionally summarizing traffic not only by source or =
destination, but=20
by any pair of source and destination realms.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.10>IP=20
Utility Summary</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>We have presented in this =
section=20
coverage of the ip utility from the IPROUTE2 utility suite. As we have =
shown=20
this is the replacement under Linux for the ifconfig and route utilities =
for=20
performing advanced IP network manipulation. While the standard =
utilities will=20
suffice for simple setups we recommend using the ip utility instead in =
order to=20
both be familiar with the usage as well as able to utilize the vast =
power of=20
this utility. Linux possesses one of the most complete and powerful=20
implementations of IP networking facilities available. We will now cover =
some of=20
the basics of using the ip utility within scripts. </FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.11>IP=20
Usage in Scripting</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>In this section we will use =
what we have=20
learned about the ip utility to create and learn from several scripts. =
First we=20
will create ipup and ipdown scripts for our system. Then we will cover =
the=20
operation of Alexey's ifcfg script from IPROUTE2 that uses the ip =
utilities to=20
provide a stronger version of ifconfig. Finally we will cover an example =
of=20
creating multiple route tables for splitting up outgoing=20
traffic.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A =
name=3Dss9.12>IPUP=20
&amp; IPDOWN</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>In this section we will =
create some=20
custom networking scripts along with the core /etc/rc.d/init.d/network =
script=20
using the IPROUTE2 utility suite. </FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>First let us consider how we =
would=20
manually configure the interfaces with the ip utility. The first =
interface is lo=20
and it was configured under ifconfig as: ifconfig lo 127.0.0.1 netmask =
255.0.0.0=20
broadcast 127.255.255.255. Rewriting this in ip we get two lines because =
of the=20
granularity of control. So we have:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip addr add 127.0.0.1/8 dev =
lo broadcast=20
+</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip link set lo =
up</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>If we want to substitute this =
directly=20
into the ipup script we would fail as the format of the configuration =
file,=20
ifcfg-lo, is different from the information we need to configure the =
interface=20
using ip. Also remember that the ip utility allows us to set multiple =
addresses=20
on a single interface and our ipup script should allow us to take full =
advantage=20
of that facility without requiring it.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>To configure multiple address =
on our=20
network interface we will use a loop over all the possible values of =
addresses=20
within a variable. Additionally we may want to allow for renaming the =
device=20
before assigning addresses so that the output of our listings makes =
better=20
logical sense. So first we should think about what variables we would =
require in=20
a configuration script. Then we can start writing the ipup script to =
take=20
advantage of the ip utility functions and our configuration=20
variables.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Consider the following =
interface=20
configuration file:</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>#!/bin/sh</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>#&gt;&gt;&gt;Device type:=20
ethernet</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>#&gt;&gt;&gt;Variable=20
declarations:</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3>DEVICE=3Deth0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3>DEVNAME=3Dinet0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3>IPCIDR=3D"192.168.1.1/24</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3>10.3.123.1/28"</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>STARTME=3D1</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>#&gt;&gt;&gt;End variable=20
declarations</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>We have ip addresses recorded =
in the CIDR=20
format that is used by the ip addr command. We have the actual kernel =
boot=20
supplied interface name and also a variable for renaming the device. =
Finally we=20
have the on-boot initialization switch. We want our ipup script to allow =
on-boot=20
init as well as after boot init functions. Since we can define more than =
one=20
IPv4 address within this configuration we need a loop function to =
iterate the=20
address assignment. Combining all of these needs we get the following=20
script.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***Begin Listing - ipup=20
script***</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>#!/bin/bash</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>cd=20
/etc/sysconfig/network-scripts/</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>. $1</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if ([ $STARTME -eq 1 ] || [ =
"$2" =3D "now"=20
])</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>/sbin/ip link set $DEVICE=20
down</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3>DEV=3D$DEVICE</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if [ -n $DEVNAME ];=20
then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>/sbin/ip link set $DEVICE =
name=20
$DEVNAME</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3>DEV=3D$DEVNAME</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>for ADDRESS in =
$IPCIDR</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>do</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>/sbin/ip addr add $ADDRESS =
broadcast +=20
dev $DEV</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>done</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>/sbin/ip link set $DEV arp=20
on</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>/sbin/ip link set $DEV=20
up</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***End =
Listing***</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Note that we allow for both =
changing or=20
not changing the device name. The inner loop assigns all addresses that =
are=20
listed in the IPCIDR variable to the device. Thus with a simple config =
file and=20
a short ipup script we can setup our network devices with custom names =
and=20
multiple addresses.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Let us take a quick look at =
the related=20
ipdown script that uses the ip utility.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***Begin Listing - ipdown=20
script***</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>#!/bin/bash</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>cd=20
/etc/sysconfig/network-scripts/</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>. $1</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3>DEV=3D$DEVICE</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if [ -n $DEVNAME ];=20
then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3>DEV=3D$DEVNAME</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>for ADDRESS in =
$IPCIDR</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>do</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>/sbin/ip addr del $ADDRESS =
dev=20
$DEV</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>done</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>/sbin/ip link set $DEV=20
down</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>/sbin/ip link set $DEV arp=20
off</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if [ -n $DEVNAME ];=20
then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip link set $DEVNAME name=20
$DEVICE</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***End =
Listing***</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Note that we change the =
device name back=20
to the original kernel defined name. That way we can switch between =
using any=20
set of utilities we want as any particular set will restore the device =
to the=20
same state as it started from.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A=20
name=3Dss9.13>IPNetwork Init Script</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Now that we have new ipup, =
ipdown, and=20
ipcfg-xxx files, let us turn our attention to the init file that runs =
the ipup=20
script on system bootup. On our systems this file is called ipnetwork =
and=20
resides in the /etc/rc.d/init.d/ directory. We will consider the final =
format of=20
this file as it is written with the IPROUTE2 utilities in=20
mind.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***Begin Listing -=20
/etc/rc.d/init.d/ipnetwork***</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>#</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3># IP network Turn on/off IP=20
networking</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>#</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3># Source function=20
library.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>.=20
/etc/rc.d/init.d/pakinit.functions</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>.=20
/etc/sysconfig/ipnetwork</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>cd=20
/etc/sysconfig/network-scripts</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3># See how we were=20
called.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>case "$1" =
in</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>start)</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>pakcmd "ipup.mon" "Starting =
Monitor" exec=20
/sbin/rtmon file \</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>/var/log/iproute.log=20
&amp;</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>pakcmd "ipup.lo" "Starting =
LoopBack "=20
./ipup ipcfg-lo</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>for IF in $INTERFACES ;=20
do</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>for i in ipcfg-$IF[0-9];=20
do</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>pakcmd "ipup.$i" " Starting =
IP Interface=20
$i " ./ipup $i</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>done</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if [ -r ipcfg-routes ];=20
then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>pakcmd "ipup.2" "Starting IP =
Static=20
Routes " ./ipcfg-routes</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>done</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>;;</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>stop)</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>for IF in $INTERFACES;=20
do</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>for i in ipcfg-$IF[0-9];=20
do</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>pakcmd "ipdown.$i" "Downing =
IP Interface=20
$i " ./ipdown $i</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>done</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>done</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>;;</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>*)</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>echo "Usage: ipnetwork=20
{start|stop}"</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>exit 1</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>esac</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>exit 0</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***End =
Listing***</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>We now posess a complete set =
of IP=20
configuration scripts that will use the ip utility to create and destroy =
IP=20
interfaces. Note that when we consider IPv6 these scripts can also be =
used with=20
only minor changes. Then we will have configuration files and scripts =
that cover=20
both protocols.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A=20
name=3Dss9.14>ifcfg script</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>We will now dissect a shell =
script=20
provided in the IPROUTE2 package. This script is called ifcfg and Alexey =
wrote=20
it as a replacement for ifconfig. Here is the full text of the=20
script:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***Begin Listing - ifcfg=20
script***</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>#! =
/bin/bash</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>CheckForwarding () =
{</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>local sbase =
fwd</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT=20
size=3D3>sbase=3D/proc/sys/net/ipv4/conf</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fwd=3D0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if [ -d $sbase ]; =
then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>for dir in =
$sbase/*/forwarding;=20
do</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fwd=3D$[$fwd + `cat=20
$dir`]</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>done</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>else</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fwd=3D2</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>return $fwd</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>}</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>RestartRDISC () =
{</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>killall -HUP rdisc || rdisc=20
-fs</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>}</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ABCMaskLen () =
{</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>local =
class;</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3>class=3D${1%%.*}</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if [ "$1" =3D "" -o $class =
-eq 0 -o $class=20
-ge 224 ]; then return 0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>elif [ $class -ge 224 ]; then =
return=20
0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>elif [ $class -ge 192 ]; then =
return=20
24</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>elif [ $class -ge 128 ]; then =
return=20
16</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>else return 8; =
fi</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>}</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>label=3D"label =
$1"</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ldev=3D"$1"</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3>dev=3D${1%:*}</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if [ "$dev" =3D "" -o "$1" =
=3D "help" ];=20
then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>echo "Usage: ifcfg DEV =
[[add|del=20
[ADDR[/LEN]] [PEER] | stop]" 1&gt;&amp;2</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>echo " add - add new address" =

1&gt;&amp;2</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>echo " del - delete address"=20
1&gt;&amp;2</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>echo " stop - completely =
disable IP"=20
1&gt;&amp;2</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>exit 1</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>shift</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3>CheckForwarding</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fwd=3D$?</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if [ $fwd -ne 0 ]; =
then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>echo "Forwarding is ON or its =
state is=20
unknown ($fwd). OK, No RDISC." 1&gt;&amp;2</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3>deleting=3D0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>case "$1" =
in</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>add) shift =
;;</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>stop)</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if [ "$ldev" !=3D "$dev" ];=20
then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>echo "Cannot stop alias =
$ldev"=20
1&gt;&amp;2</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>exit 1;</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip -4 addr flush dev $dev =
$label || exit=20
1</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if [ $fwd -eq 0 ]; then =
RestartRDISC;=20
fi</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>exit 0 ;;</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>del*)</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>deleting=3D1; shift =
;;</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>*)</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>esac</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ipaddr=3D</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>pfxlen=3D</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if [ "$1" !=3D "" ]; =
then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3>ipaddr=3D${1%/*}</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if [ "$1" !=3D "$ipaddr" ];=20
then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3>pfxlen=3D${1#*/}</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if [ "$ipaddr" =3D "" ];=20
then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>echo "$1 is bad IP address."=20
1&gt;&amp;2</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>exit 1</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>shift</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>peer=3D$1</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if [ "$peer" !=3D "" ];=20
then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if [ "$pfxlen" !=3D "" -a =
"$pfxlen" !=3D "32"=20
]; then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>echo "Peer address with =
non-trivial=20
netmask." 1&gt;&amp;2</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>exit 1</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>pfx=3D"$ipaddr peer=20
$peer"</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>else</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if [ "$pfxlen" =3D "" ];=20
then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ABCMaskLen =
$ipaddr</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>pfxlen=3D$?</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3>pfx=3D"$ipaddr/$pfxlen"</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if [ "$ldev" =3D "$dev" -a =
"$ipaddr" !=3D ""=20
]; then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>label=3D</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if [ $deleting -ne 0 ];=20
then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip addr del $pfx dev $dev =
$label || exit=20
1</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if [ $fwd -eq 0 ]; then =
RestartRDISC;=20
fi</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>exit 0</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if ! ip link set up dev $dev =
;=20
then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>echo "Error: cannot enable =
interface=20
$dev." 1&gt;&amp;2</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>exit 1</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if [ "$ipaddr" =3D "" ]; then =
exit 0;=20
fi</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if ! arping -q -c 2 -w 3 -D =
-I $dev=20
$ipaddr ; then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>echo "Error: some host =
already uses=20
address $ipaddr on $dev." 1&gt;&amp;2</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>exit 1</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if ! ip address add $pfx brd =
+ dev $dev=20
$label; then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>echo "Error: failed to add =
$pfx on $dev."=20
1&gt;&amp;2</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>exit 1</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>arping -q -A -c 1 -I $dev=20
$ipaddr</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>noarp=3D$?</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>( sleep 2 ;</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>arping -q -U -c 1 -I $dev =
$ipaddr )=20
&gt;&amp; /dev/null &lt;/dev/null &amp;</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip route add unreachable =
224.0.0.0/24=20
&gt;&amp; /dev/null</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip route add unreachable =
255.255.255.255=20
&gt;&amp; /dev/null</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if [ `ip link ls $dev | grep =
-c=20
MULTICAST` -ge 1 ]; then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip route add 224.0.0.0/4 dev =
$dev scope=20
global &gt;&amp; /dev/null</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if [ $fwd -eq 0 ]; =
then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if [ $noarp -eq 0 ];=20
then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip ro append default dev $dev =
metric=20
30000 scope global</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>elif [ "$peer" !=3D "" ];=20
then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>if ping -q -c 2 -w 4 $peer ;=20
then</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip ro append default via =
$peer dev $dev=20
metric 30001</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT =
size=3D3>RestartRDISC</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>fi</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><BR></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>exit 0</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***End =
Listing***</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>We will take this script =
apart piece by=20
piece and explain what it is doing. At the end of this you should have a =
good=20
understanding of the way an IP address can be checked for correct=20
operation.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>First off notice that there =
are several=20
functions defined early in the script. The first one, CheckForwarding(), =

performs a check using the integer values present within the interface=20
forwarding sysctl. The second one, RestartRDISC(), is for restarting the =
router=20
discovery daemon. The third one, ABCMasqLen(), is just for making =
assumptions=20
about the standard class netmask.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The script begins by =
assigning the first=20
argument as the device name and then performing some error checking. If =
the=20
arguments are incorrect or the help switch was provided then the usage =
for the=20
command is printed out. Note from the usage statement that this command =
expects=20
the netmask to be in CIDR format. If the netmask is not in CIDR format =
or is=20
provided incorrectly then the class assumption is made. Having assigned =
the=20
device name to the ldev variable we shift the arguments and check on our =

forwarding setup. If the forwarding is on we print a message and =
continue=20
assigning the forwarding result to the fwd variable.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>We next take up the case =
statement that=20
determines what operations we will perform on the interface. In the case =
of add=20
we shift arguments and continue, in the case of del we set a variable =
then shift=20
and continue. The case of stop brings up a quick flush of the entire =
interface=20
ip addressing. Note that on the stop routine we first check to make sure =
we are=20
not dealing with legacy aliased devices. Such devices use the dev:# =
format and=20
should not be used anymore due to the new multiple address structure =
available=20
for IP. Note also that after we flush the interface addressing we =
restart the=20
router discovery daemon if our forwarding sysctl is equal to zero. If we =
are=20
running a router then we will have set the forwarding status to ensure =
that=20
other devices can interoperate with us. See Chapter 4 on sysctl for more =

information.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>In the case we are adding or =
deleting an=20
interface address we continue on through checking the given address and =
mask=20
length. Then we check on the peer address and determine if it is a =
single valued=20
ip address. Once we pass these checks we test the netmask to determine =
if we can=20
safely use it. If the netmask does not exist then we call the standard =
class=20
netmask function to determine the standard class for the given ip =
address. This=20
function will return the class netmask as a CIDR mask value based solely =
on the=20
first octet of the address. Once we either have a defined netmask or =
have=20
generated one from our address we then can define our ip address =
completely=20
using CIDR format.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>We have now completed parsing =
our=20
arguments and now start into the actual work of manipulating the =
interface. We=20
first cover the case where we are deleting the ip address from the =
interface.=20
After deleting the address we again restart the router discovery daemon =
if our=20
forwarding sysctl is equal to zero to ensure the update of the routing =
tables.=20
If we are not deleting an address from an interface we start running the =

verification testing. This is where we can learn how to create better =
scripts=20
for our own interface addressing.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The first test run simply =
verifies that=20
the interface device can be enabled. If not then the script aborts =
because=20
without a running device we cannot do any configuration of the =
addressing. After=20
determining that the ip address we will use is non-null we run a =
duplicate=20
address test. This is an important check to see if the address we want =
to use=20
already exists on the local network. This uses the arping utility which =
can=20
manipulate arp functions. This utility is very powerful and provides =
quite a few=20
functions for determining and using the ip network structure. We will =
diverge a=20
bit here to discuss this utility.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A=20
name=3Dss9.15>arping utility</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>The arping utility is one of =
several=20
helpful ip utilities provided in the iputils package from Alexey =
Kuznetsov. The=20
utilities in this package include arping, clockdiff, ping, ping6, rdisc, =

tracepath, tracepath6, and traceroute6. The collection should be =
installed on=20
any machine where you will be running any of the advanced ip networking=20
functions. These commands can be used to disrupt the network so caution =
must be=20
exercised in their use and accessability.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Arping itself provides an =
IPv4 ping=20
utility that uses ARP packets for communication. This is very usefull =
for=20
manipulating arp tables on other local network devices. The arping =
utility can=20
provide duplicate address testing on the local network and two types of=20
unsolicited ARP output to enable quick updating of local network device =
arp=20
tables. This latter functionality can be used to create hot standby =
servers on a=20
network that allow failover of identical ip addresses to alternate =
devices. It=20
can also be used to wreak havok on a local network that is not =
configured to=20
prevent sabatoge.</FONT></FONT></P>
<P style=3D"MARGIN-BOTTOM: 0.17in" align=3Dcenter><B><SPAN=20
style=3D"TEXT-DECORATION: none"><SPAN style=3D"FONT-STYLE: normal"><FONT =

size=3D3><FONT=20
face=3D"courier, monospace">WARNING!</FONT></FONT></SPAN></SPAN></B></P>
<P class=3Ddblindent>If you do not understand how these functions work =
then we=20
strongly reccommend that you obtain a copy of TCP/IP Illustrated Vol. 1 =
by W.=20
Richard Stevens and read it. Without a firm understanding of the basic=20
mechanisms of TCP/IP v.4 network communication most of the utilities we =
discuss=20
and procedures we execute can cause severe disruption of your =
network.</P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Now that we understand what =
this utility=20
provides let us return to the discussion of the ifcfg =
script.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>We have now checked that the =
ip address=20
provided on the command line is not already in use on our local =
networks. We now=20
assign the ip address to the associated device and determine the correct =

completion of the command. Once this assignment has succesfully =
completed we use=20
the unsolicited ARP mechanism of arping to update the arp caches on all =
of the=20
neighboring devices. This provides instant access to our ip device from =
any of=20
the local network ip devices.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT=20
size=3D3><B>WARNING!</B></FONT></FONT></P>
<P class=3Ddblindent>If you have Win95/98/NT machines in your network be =
warned=20
that the Windows TCP/IP network stack performs duplicate address testing =

incorrectly as specified by RFC-2131. Windows TCP/IP stack sends out a=20
gratuitous ARP immediately on starting TCP/IP. This forces interruption =
of IP=20
networking services if the IP address is already in use and prevents the =
TCP/IP=20
stack on Windows from starting. There is no known way to workaround this =
fatal=20
bug in Windows TCP/IP stacks. Do not use proxy ARP or the arping =
functions in a=20
Windows TCP/IP environment.</P>
<P style=3D"FONT-STYLE: normal; TEXT-DECORATION: none" =
class=3Ddblindent><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Sadly enough the arping =
utility is very=20
popular among disgruntled network people as an anonymous way of =
preventing NT=20
servers from starting up. It is ridiculously simple to have the Linux =
machine=20
watch for GratArp requests and issue an arping response thus preventing =
the NT=20
from enabling the network card. And since ARP must be specially watched =
for by=20
almost all network management systems it is rarely detected that this =
trick is=20
being played. And even if you are watching you REALLY need to know what =
is going=20
on as it looks "normal" for the original transaction to take place.=20
</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; TEXT-DECORATION: none" =
class=3Ddblindent><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Quoting Alexey here as he =
replied to a=20
MCSE who brought this up on LinNetDev:</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; TEXT-DECORATION: none" =
class=3Ddblindent><FONT=20
face=3D"courier, monospace"><FONT size=3D3>"You have learned your =
networking from a=20
broken pile of crap and you expect me to break my system so that you in =
your=20
dumbness will be happy?"</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; TEXT-DECORATION: none" =
class=3Ddblindent><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Of course I almost did not =
include this=20
here as there are enough problems in this world without purposefully =
baiting the=20
stupid.. 8-} - Enough said.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; TEXT-DECORATION: none"=20
class=3Ddblindent><BR><BR></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Now that we have installed =
our address=20
and updated the local network hosts we turn to setting up a corrected =
routing=20
structure. We will first deal with routes to the multicast address class =
and the=20
broadcast class. We start by sending both of these routes into the table =
main=20
with a setting of host unreachable. We then test our link device for =
multicast=20
capabilities. If the link is multicast enabled we allow the route for =
the=20
multicast address class to be assigned to the device.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Finally we test again if the =
interface is=20
forwarding. In the case of no forwarding we further test for the arp=20
capabilities and peer addresses. If our interface has arp capabilities =
then we=20
place a default route with a high metric out our device. In the case =
where we=20
have a peer address then we test for the presence and insert a default =
route via=20
our peer address with a somewhat high metric. In either case with no =
forwarding=20
we restart router discovery as the final step.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Now that we have covered the =
script=20
operation let us look at the utilities and logic behind it with an eye =
towards=20
modifying our own interface address assignment scripts. First of all we =
will=20
note the use of the router discovery agent. This agent is one of the =
reasons we=20
stressed in the parts on ip route why you should always add a protocol =
level to=20
your routes. We stressed that if you will be using ip route to add =
routes to the=20
tables that you code them with protocol static to enable the kernel to =
know that=20
they are valid static routes. Here is one of the reasons why this is =
important.=20
Under router discovery the rdisc daemon can override routes that are non =

protocol tagged. So if we had just placed a default route into our table =
and we=20
then start router discovery we will find that our route is not being =
used unless=20
we coded the protocol. This is even more important if we will use any of =
the=20
routing daemons such as zebra or gated.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Note that even in this script =
we need to=20
try and use CIDR notation format for our IP addressing. This is actually =
a very=20
good requirement as it speaks directly to the function of address =
masking. IP=20
address masks, and IPX address masks as well, require that the mask =
portion be=20
contiguous. When we write out a mask using the old style dotted decimal =
it is=20
impossible to indicate the continuity of the mask. Consider the address =
mask=20
255.252.255.0. If you do not understand that masks must be contiguous =
then this=20
looks like it could be a valid mask. We say that knowing that many =
people=20
configuring IP systems rely on the numbers belonging to the set of good =
numbers.=20
This set is: 255,254,252,248,240,224,192,128 So the assumption is that =
if these=20
numbers are present then the mask must be valid. Using CIDR style =
notation we=20
indicate the number of contiguous ones starting from the left in the =
mask. In=20
this manner it is impossible to specify an invalid mask. Additionally =
you can=20
readily see the scope of the address mask in CIDR notation thus making =
it easier=20
to see where a route would be a more specific or general set of another =
route.=20
So our choice of using CIDR address notation within our configuration =
file turns=20
out to be the best way of specifying our addressing.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>As far as considering the =
uses of the=20
arping utility, as we mentioned in the warning above Microsoft Windows =
IPv4=20
stacks do not handle duplicate address detection correctly thus using =
arping on=20
such a network can be problematic. We would not recommend using it =
except for=20
the duplicate address detection. In our case we will not want to place =
it into=20
our scripts except in cases where we know that we will need to perform =
duplicate=20
address detection due to oddly configured DHCP servers and other such =
high=20
levels of keyboard-seat interface errors.</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"=20
align=3Dcenter><FONT face=3D"courier, monospace"><FONT size=3D3><B><A=20
name=3Dss9.16>Policy Routing - Multiple Route Tables=20
Example</A></B></FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>We will now consider what is =
arguably the=20
most powerful feature in the Linux kernel routing code: The use of =
multiple=20
routing tables combined with policy based routing. In the following text =
we will=20
present an example of a system acting as a router for three disparate =
networks.=20
We will return to this example and consider the ipchains utility in the =
latter=20
half of this book where we cover Linux security and =
firewalls.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>First off look at the diagram =
of the=20
network we have under consideration:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><IMG=20
border=3D0 name=3DGraphic1 align=3Dleft=20
src=3D"http://www.policyrouting.org/sv14814886.jpg" width=3D1355=20
height=3D785><BR><BR></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Multiple Route Tables Network =

Diagram</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Note that we have three =
external networks=20
attached to our external ethernet interface. Each of these networks has =
their=20
own router and their own IP address space that we need to use. Note that =
two of=20
these address spaces overlap thus adding in a degree of complexity. We =
will want=20
to setup our routing tables to allow the following=20
connectivity.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* All traffic from any =
internal network=20
may go to the Internet</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* Traffic from Internal B may =
go to=20
Network A</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* Traffic from Internal A may =
go to=20
Network C</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* Traffic from Internal A =
Hosts 33-62 may=20
go to Network A</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; TEXT-INDENT: -0.6in; MARGIN-BOTTOM: 0.17in; =
MARGIN-LEFT: 0.7in; TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>* Traffic from Internal B =
Hosts 65-78 may=20
go to Network C</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>First we will want to setup =
our external=20
IP addressing. We will setup two addresses on our DMZ ethernel=20
interface.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***Begin =
Listing***</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip addr add 10.254.254.2/30 =
dev=20
eth0</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip addr add 172.17.1.128/24 =
dev=20
eth0</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***End =
Listing***</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Next we will cover what route =
tables we=20
will want to create.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>One of the best ways to look =
at this is=20
to consider that policy routing enables us to determine what routing =
table to=20
use for source addresses. So the rules should enable us to segment the =
internal=20
networks. Then we can setup normal destination based routes within the =
tables.=20
So let us create two new route tables and then discuss the ramifications =
of this=20
decision.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>First we will name the tables =
by editing=20
the /etc/iproute2/rt_tables file. We will end up with a file that looks =
like the=20
following:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***Begin =
Listing***</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>#</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3># reserved =
values</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>#</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>255 local</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>254 main</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>253 default</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>0 unspec</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>#</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3># Local =
Tables</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>#</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>1 networka</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>2 networkb</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***End =
Listing***</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Now we can refer to these =
tables in the=20
rule commands. First we will set up the routes in each of these=20
tables.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>When you go about setting up =
the routes=20
within tables there is an approach you can take which will help clarify =
the=20
steps. Imagine that you are configuring a router that only has two =
interfaces.=20
The outgoing interface attaches to any outbound router and the incoming=20
interface already only has the packets you want to route. Then it is =
simply a=20
matter of setting up the routing that you would want within that scope. =
Let us=20
illustrate by running through the setup for table 1, networka. Here are =
the=20
commands we would need to input to get the networka routing table=20
configured:</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***create networka routing=20
table***</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip route add 10.10.0.0/16 via =

10.254.254.2 table networka proto static</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip route add default via =
172.17.1.254=20
table networka proto static</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***End***</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Now what is the command =
sequence for=20
table networkb? Exactly.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***create networkb routing=20
table***</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip route add 172.18.0.0/16 =
via 172.17.1.1=20
table networkb proto static</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip route add default via =
172.17.1.254=20
table networkb proto static</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***End***</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Let us step back a moment and =
discuss why=20
we have only two tables with three destinations. Notice that we have =
duplicated=20
the destination default for the Internet into both tables. Why not place =
this=20
into a third table that we will refer to? The best way to answer this is =
to=20
consider the interaction between the rules and the tables. Remember that =
the=20
rules define the policy based routing structure. Multiple rules may =
point to the=20
same table. However once you are in a table you will need to either =
obtain a=20
route or be returned via a throw route to the rule list. So if we have =
matched a=20
rule we would like to assume that we have a correct match of our policy. =
Thus we=20
would like all possible routes for that packet to be present in the =
routing=20
table to which the packet is sent. In the case where we have three =
tables then=20
we would have to have additional rules that actually need to look at the =

destination of the packet. But looking at the packet destination is the =
function=20
of a standard route. So why have rules for every possible combination of =
source=20
AND destination? By using the table we have we can create a few rules =
that will=20
serve our purpose. Of course the flexibility of the system allows doing =
the=20
other way around or even through granular inspection of the packets =
themselves.=20
You should work through all of these scenarios for yourself and decide =
what=20
works best for you. Enough theorizing, onwards to the =
action.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***ip rule set =
#1***</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip rule add from =
192.168.1.32/27 to=20
172.18.0.0/16 pref 15000 table networka</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip rule add from =
192.168.2.64/28 to=20
10.10.0.0/16 pref 15001 table networkb</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip rule add from =
192.168.1.0/24 pref=20
15002 table networkb</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip rule add from =
192.168.2.0/24 pref=20
15003 table networka</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***End***</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Note that we have used the =
preference=20
settings to run our rules from most detailed to most general. Remember =
from the=20
discussion of ip rule that there are two default rules with higher =
priorities=20
present to catch whatever we do not specify here. These two default =
rules are=20
very important. Think about what would happen if we forgot about those =
rules and=20
specified priorities for our rules such as 65535? Would our rules ever =
be=20
used?</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>So now consider what will =
happen to a=20
packet incoming from one of our internal networks. First it will be =
passed=20
through the rule priority 0 which will pass on it. Then it hits rule =
priority=20
15000. If it matches it will be routed according to table networka. If =
not it=20
runs through rule 15001, then 15002, and finally 15003. Will such a =
packet ever=20
continue on beyond rule priority 15003?</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Now let us confuse the issue. =
We will=20
redo our tables and rules from a different angle just to illustrate the =
range of=20
flexibility we have to specify our routing structure.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>First let us provide some =
details about=20
our Linux server. Our Linux server has the following network interfaces =
and=20
addresses:</FONT></FONT></P>
<P class=3Ddblindent>eth0 - DMZ ethernet - addresses: 10.254.254.2/30,=20
172.17.1.128/24</P>
<P class=3Ddblindent>eth1 - Internal A - addresses: 192.168.1.254/24</P>
<P class=3Ddblindent>eth2 - Internal B - addresses: 192.168.2.254/24</P>
<P class=3Ddblindent><BR><BR></P>
<P>Now we will run through the route and rule creation assuming we are =
starting=20
from the beginning. First edit /etc/iproute2/rt_tables:</P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT=20
size=3D3>#/etc/iproute2/rt_tables</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3># reserved =
values</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>#</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>255 local</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>254 main</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>253 default</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>0 unspec</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>#</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3># Local =
Tables</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>#</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>1 int1</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>2 int2</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>#</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>Create the routes and=20
rules.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***ip rule set =
#2***</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip route add 10.10.0.0/16 via =

10.254.254.1 table int1 proto static</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip route add throw 0/0 table =
int1 proto=20
static</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip route add 172.18.0.0/16 =
via 172.17.1.1=20
table int2 proto static</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip route add throw 0/0 table =
int2 proto=20
static</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip route add 0/0 via =
172.17.1.254 table=20
main proto static</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip rule add pref 15000 table =
int1 iif=20
eth1</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip rule add pref 15001 table =
int2 iif=20
eth2</FONT></FONT></P>
<P style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip rule add pref 15002 to =
10.10.0.0/16=20
table int1</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>ip rule add pref 15003 to =
172.18.0.0/16=20
table int2</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-TOP: 0.17in; MARGIN-BOTTOM: 0.17in; =
TEXT-DECORATION: none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>***End***</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><FONT=20
face=3D"courier, monospace"><FONT size=3D3>This set of routes and rules =
will perform=20
the same operations as set #1. Study them until you see why. Hint: Do =
not forget=20
the default rules. Later we will see how to use policy routing to =
perform=20
miraculous tricks with packet paths.</FONT></FONT></P>
<P=20
style=3D"FONT-STYLE: normal; MARGIN-BOTTOM: 0.17in; TEXT-DECORATION: =
none"><BR><BR></P></BODY></HTML>

------=_NextPart_000_0000_01CED3FA.73DB7510
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://www.policyrouting.org/sv14814886.jpg

/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a
HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy
MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAHmAy4DASIA
AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3
ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm
p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA
AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK
U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3+iii
gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
CiiigAooooAKKKKACiiigAooooAKKKKACiiuff8A4qe8urRv+QLaSmCdRyL6QAFkz08lSdrDqzqy
NhVZZACSfxE0lxLa6Rpd3qcsbmKSZNsVvE4OMNK5G4BgwbyhIVKsCucAx+T4wuP3v27Q7Hd/y7/Y
5rvZ/wBtfNi3Z6/cXGcc4ydyCCG1t4re3ijhgiQJHHGoVUUDAAA4AA4xUlAHP+T4wt/3v27Q77b/
AMu/2Oa03/8AbXzZduOv3GzjHGcixY+JLO6vI7C6jn03UpM7LO+UI8mASfLYEpLheT5bNtyN2DxW
xVe+sbfUbOS1uo/MhfBIDFSCCCrKwwVYEAhgQQQCCCKALFZepa/Y6bcLZlpLnUHQPHY2q+ZOykkB
io+4hYbfMcqgJGWFU/suu23/ABKrW43Wj/6vUpXDzW0fdCGz5knQI7ZGMmTcyfvtTTdLtNJt2htE
kAdy8jyyvLJI2AMu7ksxwAASTgKB0AFAGX/xVl9++ik0rSYz923uLZ7yTHUF2SWNVbnBRd4BHDsD
wfZvGEfz/wBq6HcbefJ/syaHzP8AZ8zz32Z6btrY67T0roKKAOf/AOEjuLDjXtInsI1+/ewOLm0B
68uMSIoGSzyRoi4OWxgnoKK5uaCHwegurCKOHQ96rc2cahUtdzAefGBwiDOZF4XAaQYYMJADpKKK
KACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigA
ooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACi
iigAorP1PU/sPlW9vD9p1C4yLe2Dbd2MbnZsHZGuRubBxkABmZVbP+zeMJPn/tXQ7fdz5P8AZk03
l/7Pmeem/HTdtXPXaOlAEmuzzXjpoNhLJHcXaH7TcQsQ9lblWHmgjo7MNic5ySwDCNhWxBBDa28V
vbxRwwRIEjjjUKqKBgAAcAAcYrL0HTLyz+2XeqzQT6ndy5llgUrGI0+WJEDEsq7RvKlmAeSQg81s
UAFFFFABRRRQAUUUUAFFFFABRRRQBz9j/wASHXI9HHy6XdRF9PU9IZEyZIAeylSrxoMkBJgMIiqO
grL1/TZtS0thZtHHqFu4uLKSQkKsycqGIGQjco+OSjuO9U/sfjD/AKDuh/8Agmm/+SqAOgorL03V
Zp7hrDUraOz1JUMnlRymWOWPIG+NyqlgCQGBUFSRkYZGbUoAKKKKACiiigAooooAKKKKACiiigAo
oooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACii
igAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKK
ACiiigAooooAKKKKACiiigAooooAKKKKACiiigAqnqupQ6RpdxfzrI6QpkRxAF5W6KiAkbnZiFUd
yQO9XK5/xF/p2o6Loy8+fdrez44ZYbYrIGBPH+u+zqRySrtgcFlALmiabNZ2/wBp1Bo5dXuUQ3ky
EldwH3I8gERKSwUe5JyzMx1KKKACiiigAoorLsfEekalqUunWl9G95Eju0JBVtqyvCxAIGQJI3Uk
e3ZlyAalFc/B400S6vLG1ge+kkvokntimm3JSSNghDh/L27R5iZJOF3YbBqOLx1oU1h9vRtS+yFI
3SZtJulWQSOqJsJj+cszrgLknOegJoA6SisOLxfocjwRyXclrLPcJbRxXlvLbO0jqzINsiqQG2OF
YjDFSoJPFF54u0exv3sJJLuW7R2RobWxnuGBVInbIjRuAs8XPT5wOuQADcorD/4S3ShqltppXUhd
3KK8SHS7kAqdnJby8ADzEDEkbScNg1uUAFFFFABRRRQBT1LTYdTt1jkaSKSNxJBcRECSCQAgOhII
zgkEEEEEqwKkg19A1KbUtLU3ixx6hbube9jjBCrMnDFQTkI3Dpnko6HvWpXP2P8AxLvGmqWbcR6n
EmoQk8lpECwTAY6KqrakA8kyNgkDCgHQUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABR
RRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFF
FABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUU
AFFFFABRRRQAUUUUAFFFFABXP3n/ACUPRv8AsFX/AP6NtK6Cuf8AE/8Aokuj6un+stdQhgYDgyx3
DCAoW/uhpI5COQTCvQ4IAOgooooAKKKKACvO9N8JavHquo3xhjguYrj7VYSSSAq7fbb52Q7c7Q8F
yF3FTt83IBZcD0SigDj/AA5omo2H/CIfabfy/wCz/D8lldfOp8uY/ZcLwef9U/IyPl68jPN6X4Vv
m8I6do8uieILW7iTT0uZZ9Z3wYiuIGl8pVuW8shUZlKqpAXAwSAfVKKAPP5PBTvqCWNxaz3unNqD
vLd3N40sr2klncR+Uzu+/wCSSVlAXgLIpyWMhrLXwzr8PiJr7V9O1LUxvnVrjSNQW1eYmCxRZTiW
IqGNvKSmSFPHICsfVKKAOfh0+4PiHQ71baeK1t9KuYJBcTCSSN3e2Kq7bmLNiN8tluV6nIz0FFFA
BRRRQAUUUUAFc/ef8lD0b/sFX/8A6NtK6Cuf0v8A07xfrl6//Lj5OmxI3zbf3azu6n+Hf50akDr5
Ckk8BQDoKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKK
ACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAq
vf2NvqenXNheR+Za3UTwzJuI3IwIYZHIyCelWKKAMfSb64S8n0jUpN93B81vMyhTeQYX97gfLuVm
2OF7gNtRZEWtiqepaVY6vbrBf20c6I4kjLcNE4BAdGHKOMnDKQR2IrL/ALG12y+XTPEe6E8CPVbQ
XXlqPuhGRonPHUyNIxwDnOSwB0FFYeh3N3b3Fzo2q3UlxeQu0lvczKiNd25IIfCALlC3lsBz8qsQ
okUVuUAFFFFABRRRQAUUUUAFFFFABRRRQAUVj+JL64tdOjtbCTy9S1CUWlo+0Hy3YEtJg8Hy0WST
acbtm3OWFV/7I8RS/uZ/FHl26fcltLCNLlscDzHkLxnjk7Y0ycEbR8pALmtalNZpDa2Cxy6nduEg
jcEhV3KJJWAI+SNW3HlcnagYM61Y0vTYdJsFtIWkcB3keSQgtJI7l3c4AGWZmbAAAzgADAqPTNE0
7R/Nayt9s02POuJHaWabGdvmSuS74BIG4nA4GBWhQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUU
UUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRR
QAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFA
BRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAY+v2NxJFDqenR+Zqen75beLcFFyCpDQMx
xhX45zgOsbENswdCxvrfUbOO6tZPMhfIBKlSCCQyspwVYEEFSAQQQQCKsVhz2F9pVxLeaMI5LeRz
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
iiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKK
KKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooo
oA8//wCbhf8AuVP/AG7r0CvP/wDm4X/uVP8A27r0CgAooooAKKKKACiiigAooooAKKKKACiiigAo
oooAK5+8/wCSh6N/2Cr/AP8ARtpXQVz95/yUPRv+wVf/APo20oA6CiiigAooooAKKKKACiiigArz
/wAJf8le+Iv/AHDP/Sdq9Arz/wAJf8le+Iv/AHDP/SdqAPQKKKKACiiigAooooAKKKKACiiigAoo
ooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
Ciiuf8V+MdL8H2dvLf8Anz3F1KIbWytE8ye4ckDCJkZxkZ57gdSAQDoKK8//AOFp/wDUheOf/BP/
APZ0f8LT/wCpC8c/+Cf/AOzoA9Aorz//AIWn/wBSF45/8E//ANnR/wALT/6kLxz/AOCf/wCzoAP+
bhf+5U/9u69Arxf/AITC8/4Wn/wlH/CD+MvsP9if2f5f9knzPM8/zM43Y2475zntXUf8LT/6kLxz
/wCCf/7OgD0CivP/APhaf/UheOf/AAT/AP2dH/C0/wDqQvHP/gn/APs6APQKK8//AOFp/wDUheOf
/BP/APZ0f8LT/wCpC8c/+Cf/AOzoA9Aorz//AIWn/wBSF45/8E//ANnR/wALT/6kLxz/AOCf/wCz
oA9Aorz/AP4Wn/1IXjn/AME//wBnR/wtP/qQvHP/AIJ//s6APQKK8/8A+Fp/9SF45/8ABP8A/Z0f
8LT/AOpC8c/+Cf8A+zoA9Aorz/8A4Wn/ANSF45/8E/8A9nR/wtP/AKkLxz/4J/8A7OgD0CivP/8A
haf/AFIXjn/wT/8A2dH/AAtP/qQvHP8A4J//ALOgD0CufvP+Sh6N/wBgq/8A/RtpXP8A/C0/+pC8
c/8Agn/+zrLn+IU0virT9UXwL418i3srm3dTpB3FpHgZSPmxjETZ57jr2APVKK8//wCFp/8AUheO
f/BP/wDZ0f8AC0/+pC8c/wDgn/8As6APQKK8/wD+Fp/9SF45/wDBP/8AZ0f8LT/6kLxz/wCCf/7O
gD0CivP/APhaf/UheOf/AAT/AP2dH/C0/wDqQvHP/gn/APs6APQKK8//AOFp/wDUheOf/BP/APZ0
f8LT/wCpC8c/+Cf/AOzoA9Arz/wl/wAle+Iv/cM/9J2o/wCFp/8AUheOf/BP/wDZ1x/h3x/9k+I/
jTUf+ES8VzfbvsP+jQ6bumt9kJX96u75d3VeuRQB7hRXn/8AwtP/AKkLxz/4J/8A7Ormi/Emx1bx
Ba6LcaH4g0i7vEka1/tSx8lZig3MqnceQvPpx1yQCAdpRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAB
RRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFF
FFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAFe/vrfTNO
ub+8k8u1tYnmmfaTtRQSxwOTgA9K+fLOfV/if41gimlk06bVrJ2vhasN9npIYGOAZwd8r/MzEHKy
RMuELIfU/ivfXEXgv+ybKTyr7XruHSLeRlBRTMcNvznClA4yASMjHqM/4QWNu2na3rltH/ouoag0
Onzbj+8sLcCG3G08jaFcfMAxxls8GgDP1nwDZfD68sfGHg+z+zQ6Z5jataCeRzdWhA3ld8mCyAFg
pIBIB5KgH0jQ9Zs/EOh2Wr2D77W7iWVMkErnqrYJAYHIIzwQRWhXH/Db+zrfw1daTpvyw6Vqt9ZG
L5j5WLh2Vct975HQ5yevXOaAOwooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoo
ooAKKKKACiiigAooooAKKKKACiiigArH8VeHrfxX4X1HQ7ptkd3EUD4J8twco+ARnawU4zzjB4rY
ooA4v4eeJ9S1m31PR/ECRp4g0S4+zXhjRlWdSP3cwBUABwGPHXG7ADAV2lefzf8AFPfG22dPltfF
OntG6J8xa6thuDtn7q+Udo2nk9R3r0CgAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAC
iiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKK
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
Of8AwT//AGdAHoFFef8A/C0/+pC8c/8Agn/+zo/4Wn/1IXjn/wAE/wD9nQB6BRXn/wDwtP8A6kLx
z/4J/wD7Oj/haf8A1IXjn/wT/wD2dAHoFFef/wDC0/8AqQvHP/gn/wDs6P8Ahaf/AFIXjn/wT/8A
2dAHoFFef/8AC0/+pC8c/wDgn/8As6P+Fp/9SF45/wDBP/8AZ0AegUV5vcfFzyJ7SP8A4QTxkPPl
MeJdN2McIzfINx3t8v3ePl3HPy4Nj/haf/UheOf/AAT/AP2dAHoFFef/APC0/wDqQvHP/gn/APs6
P+Fp/wDUheOf/BP/APZ0AegUV5//AMLT/wCpC8c/+Cf/AOzo/wCFp/8AUheOf/BP/wDZ0AegUV5/
/wALT/6kLxz/AOCf/wCzo/4Wn/1IXjn/AME//wBnQB6BRXn/APwtP/qQvHP/AIJ//s6P+Fp/9SF4
5/8ABP8A/Z0AegUV5/8A8LT/AOpC8c/+Cf8A+zo/4Wn/ANSF45/8E/8A9nQB6BRXn/8AwtP/AKkL
xz/4J/8A7Oj/AIWn/wBSF45/8E//ANnQB6BRXn//AAtP/qQvHP8A4J//ALOj/haf/UheOf8AwT//
AGdAHoFFef8A/C0/+pC8c/8Agn/+zqndeKfF/jJ20jw74Y1LQ7SZPLu9X1mNoHt1dXBMMYYFnGAV
YMcHAIAIagA8DzjxX8TfFPi2KWSXT7RE0XTpA0ZR1Uh5sbclhv2srE8iT8F9MqnpWlWOh6Xb6Zpl
tHbWdumyKJOij+ZJOSSeSSSck1coAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigA
ooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACi
iigAooooAKKKKACiiigDn/EP/Ic8J/8AYVk/9Irqugrn/EP/ACHPCf8A2FZP/SK6roKACiiigAoo
ooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK
KKKACiiigAooooAKKKKACiiigAooooA5/wAQ/wDIc8J/9hWT/wBIrqugrn/EP/Ic8J/9hWT/ANIr
qugoAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACi
iigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKK
KACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACisPxpPNa+BfENxbyyQzxaZcvHJGxVkYRMQQRy
CDzmvP8AWtQs9L8RTaTFb6lK4uDb24bxLqzS3DLBFM5WOGOXAVZl6nsTQB3niH/kOeE/+wrJ/wCk
V1XQV4Xqt1OdR0MnRtZXF6xAbVtcYt/o83ClrYFT3ymWwCMbSxFx9etLTVtLsL+x1W2k1G7itoUf
xDrUbvukVGZRLCitt3gkbh+ZFAHtFFc34UiNreeI7Jbi7mgtdTVIftVzJOyKbW3cgNIzNjc7HGe5
rpKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoo
ooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiuX1n4jeDtA3jUf
EVikiSmF4YZPOkRxnIZI9zLjBByODx1rk9S/aC8EWNwsVudS1BCgYy2tsFUHJ+U+YyHPGemORz1w
AeqUV5vffGKz0yzkvL/wb4ytLWPG+afTBGi5IAyxfAySB+NR6b8efAd9btLcX13p7hyoiurR2YjA
+YeXvGOcdc8HjpkA9MorP0zXdH1vzf7J1Wxv/Jx5n2S4SXZnOM7ScZwevoa0KACiiigAooooAKKK
KACiiigAooooAKKKKAOf8d/8k88S/wDYKuv/AEU1eZ+KpYY/iLP9s0nUtXsDe3ButPsLIXLTqtrp
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
LgRySl1UKRuxGgPzZRADpLrQLG+uNTlulklTUrJLG5iLYUxKZeBjBBPnOCc+mMd88+D4pHN1Nq+p
S6oHRotSbyRLEEWRVVVEYiIxNMPmQn94eeF28ve2c1poPjC2iu5JMa7Z/aLm9zKpiMdkZmmAKgxb
C5dRtQJuHyqMDLf+y5YrW3mk8OQaNFLciK+ubbfo877bcgxQNKESTLSqCsh5iuDgl22gHqGm6Sml
QQwwXM7Rp5rSB9p86WR/MeVsLwxYucLtX5z8uAu2O00UafoNhpFjf3dvFZW628cqiNnZVjKKW3IR
kcNwByozxlTzd3qnh+18A6V/wlZzstLV5LDU7hWmkldCqJMH2q7FlfmQBQyFzt2ErJaXnhyw8Aga
vrGmy6WUmuWEFzvgEImz5Me3mSJC6Q7QMMNqlRu2UAaFh4Sk07S/sMPiPWTscPDMTAHjb5t5OIgJ
C+9ixlD5PzcN81R3Xw+8N39jBb3unQXU0UqzG7ngjeaRvO89wWK8K7l9ygBcOwAAPHFyW2g32m21
x/bfhiz0U3s08OnXkCXdhbSeVGix7klSJZQDJIY8kFppCA+zzKufa9Wm8T+Dbifw7fafYCWGO0tI
5Ilhg3WM5kym9WDLuC7Wj+VYG2nMhQgHqFFFFABRRRQAUUUUAFFFFABXl/jL4O2+saxL4j8NapPo
WvtlzJAxWORyrAk7cMjNkBmBPGTtJJJ9QooA8rsPiRrXhF/7P+JmmSWo3iODWrKEyWs4Cty+3JV2
KEgAA4blEAyfRNM13R9b83+ydVsb/wAnHmfZLhJdmc4ztJxnB6+hq5PBDdW8tvcRRzQSoUkjkUMr
qRggg8EEcYrzfW/gR4I1i48+G2u9Mcu7yCwmCq5Y5+64YKBzgKFAz9MAHplFeRwfCDxNp1xF/Zfx
P1m3tLZx9lt5I2kWNFPyIR5oRgAAMbQD6Y4q5qfw58c6v5X2n4qX0flZ2/ZNPFtnOM58qRd3TvnH
OOpoA9Ivr+z0yzkvL+7gtLWPG+aeQRouSAMseBkkD8a8/wDEPxl0LT7waZ4et5/E2rv9y203LocA
Mf3gBz8pY/IGxtIO2suD9nvwy1xFd6pqms6hdlxLdNJOqrcPnLk/LvAY5/izz97PNeieHvCuheFL
M2uh6ZBZRt98oCXkwSRuc5ZsbjjJOM4HFAHmcHw08R/EDWYtb+Jc8cEECBbXR7CXCp83zbjlgAwU
E7WLHcPmXaBXsEEENrbxW9vFHDBEgSOONQqooGAABwABxipKKACiiigAooooAKKKKACiiigAoooo
AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigA
ooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACi
iigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKK
KACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
AKKKKACiiigAooooAKKKKAP/2Q==

------=_NextPart_000_0000_01CED3FA.73DB7510--
